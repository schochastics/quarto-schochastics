{
  "hash": "99b912a50bd992fbc40761c8dcb09a72",
  "result": {
    "markdown": "---\nauthor: David Schoch\ndate: \"2021-11-04\"\ndescription: Draw maps using the javascript library roughjs. This allows to draw sketchy, hand-drawn-like maps.\ntitle: roughsf\nimage: featured-hex.png\ntitle-block-style: none\ntoc: true\npriority: 9\n---\n\n\n<button type=\"button\" class=\"btn btn-outline-success\"><a href=\"https://github.com/schochastics/roughsf\">GITHUB</a></button>\n\n\n\n\n\n\nUsing the java script library [rough.js](https://roughjs.com/) to draw sketchy, hand-drawn-like maps  \n\n![](https://raw.githubusercontent.com/schochastics/roughsf/main/man/figures/example.png)\n\n## Installation\n\nYou can install the developers version of roughsf with:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# install.packages(\"remotes\")\nremotes::install_github(\"schochastics/roughsf\")\n```\n:::\n\n\n## Usage\n\n`roughsf()` takes a list of sf objects as input. The layers are drawn in order as they appear in the list.\nMULTI* geometries are not supported and should be casted beforehand. Aesthetics need to be specified explicitly as\ncolumns in the sf objects.\n\nThe following attributes are supported for POLYGONS:\n\n* *fill* fill color\n* *color* stroke color\n* *stroke* stroke size\n* *fillstyle* one of \"hachure\", \"solid\", \"zigzag\", \"cross-hatch\", \"dots\", \"dashed\", \"zigzag-line\"\n* *fillweight* thickness of fillstyle (between 0 and 1)\n* *hachureangle* angle of hachure lines\n* *hachuregap* gap between two hachure lines\n\nThe following attributes are supported for LINESTRINGS:\n\n* *color* stroke color\n* *stroke* stroke size\n\nThe following attributes are supported for POINTS:\n\n* *color* color of point\n* *size* size of point\n* *label* label to be added (optional)\n* *label_pos* position of label relative to point: (c)enter, (n)orth, (e)ast, (s)outh, (w)est (optional)\n\nDefault values are used if one of the attributes is not found.\n\n**Values need to be specified explicitly and cannot be inferred from other columns** (This needs to be done in a preparatory step)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\nger <- rnaturalearth::ne_countries(scale = \"medium\", country = \"Germany\", returnclass = \"sf\")\nger <- st_cast(ger, \"POLYGON\")\nger$fill <- \"#CD2626\"\nger$stroke <- 2\nger$fillweight <- 0.5\n\n# MULTIPOLYGON (and also MULTILINESTRING) are not supported\nger <- st_cast(ger, \"POLYGON\")\n\ncities <- data.frame(name = c(\"Berlin\", \"Munich\", \"Hamburg\", \"Cologne\"))\ncities$geometry <- st_sfc(\n  st_point(c(13.4, 52.5200)), st_point(c(11.582, 48.1351)),\n  st_point(c(9.9937, 53.5511)), st_point(c(6.9603, 50.9375))\n)\ncities <- st_sf(cities)\nst_crs(cities) <- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\ncities$size <- 15\ncities$color <- \"#000000\"\ncities$label <- cities$name\ncities$label_pos <- \"e\"\n\nroughsf::roughsf(list(ger, cities),\n                 title = \"Sketchy Map of Germany\", caption = \"drawn by @schochastics\",\n                 title_font = \"48px Pristina\", font = \"30px Pristina\", caption_font = \"30px Pristina\",\n                 roughness = 1, bowing = 1, simplification = 1,\n                 width = 800, height = 1000, \n)\n```\n:::\n\n\n![](https://raw.githubusercontent.com/schochastics/roughsf/main/man/figures/germany.png)\n\nPlots can be saved as png with the `save_roughsf()` function.\n\n# More Examples\n\n![](https://raw.githubusercontent.com/schochastics/roughsf/main/man/figures/africa.png)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}