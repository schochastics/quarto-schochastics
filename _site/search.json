[
  {
    "objectID": "material/index.html",
    "href": "material/index.html",
    "title": "Open Source Material",
    "section": "",
    "text": "Tutorials and other open source material\n\n\nAll material listed here is licensed under a CC by License.\n\n\n\n\n\n\n\n\n\n\nNetwork Visualizations in R\n\n\nusing ggraph and graphlayouts\n\n\nTutorial for Network Visualization in R using ggraph and graphlayouts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBasic Network Analysis in R\n\n\nusing igraph and related packages\n\n\nTutorial for Network Analysis in R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Network Analysis in R\n\n\nusing the tidygraph package\n\n\nNetwork Analysis in R using tidygraph\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n30DayMapchallenge 2021\n\n\nMy contributions to the 30DayMapchallenge in 2021\n\n\nMy contributions to the 30DayMapchallenge in 2021\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe Minard System in R\n\n\nMinard’s Statistical Graphics with Modern Data in R\n\n\nRecreating Minard’s Statistical Graphics with Modern Data in R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRendering Galaxies in R\n\n\nRandom galaxies, black holes and star constellations\n\n\nRandomly generate galaxies, black holes and star constellations\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSoccer Data\n\n\nA collection of datasets around soccer\n\n\nA collection of datasets around soccer\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nswAIg\n\n\nAI generated code coture\n\n\nnerdy designs partially generated with AI\n\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "material/minard/index.html",
    "href": "material/minard/index.html",
    "title": "The Minard System in R",
    "section": "",
    "text": "Code\nIf you are into data viz, then I am pretty sure that you have seen the chart above before. E. Tufte once declared this to be “the best statistical graphic ever drawn”.\nWhat you might not know is that its creator, Charles Joseph Minard, made far more significant contributions in the field of information graphics. Especially with his flow maps. Sandra Rendgen dedicated a book, “The Minard System”, which shows 61 maps and plots that Minard produced during his lifetime. The book is really inspiring and I can only recommend it. One cold winter day in early 2021, I decided to try to recreate some of Minards work with R. I was particularly interested in his flow maps. This was also actually the starting point for me to develop the R package edgebundle. I had the ambitious goal to reproduce as many of his 61 drawings as possible and thus far managed to do r length(list.files(pattern=\"viz\"))."
  },
  {
    "objectID": "material/minard/index.html#ports-in-france-i",
    "href": "material/minard/index.html#ports-in-france-i",
    "title": "The Minard System in R",
    "section": "(11) Ports in France I",
    "text": "(11) Ports in France I\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#english-coal-exports-i",
    "href": "material/minard/index.html#english-coal-exports-i",
    "title": "The Minard System in R",
    "section": "(14) English Coal Exports I",
    "text": "(14) English Coal Exports I\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#meat-sent-to-paris",
    "href": "material/minard/index.html#meat-sent-to-paris",
    "title": "The Minard System in R",
    "section": "(21) Meat Sent to Paris",
    "text": "(21) Meat Sent to Paris\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#ports-in-france-ii",
    "href": "material/minard/index.html#ports-in-france-ii",
    "title": "The Minard System in R",
    "section": "(24) Ports in France II",
    "text": "(24) Ports in France II\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#cargo-ports-in-europe",
    "href": "material/minard/index.html#cargo-ports-in-europe",
    "title": "The Minard System in R",
    "section": "(25) Cargo Ports in Europe",
    "text": "(25) Cargo Ports in Europe\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#cargo-ports-of-the-globe",
    "href": "material/minard/index.html#cargo-ports-of-the-globe",
    "title": "The Minard System in R",
    "section": "(34) Cargo Ports of the Globe",
    "text": "(34) Cargo Ports of the Globe\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#global-migrants",
    "href": "material/minard/index.html#global-migrants",
    "title": "The Minard System in R",
    "section": "(38) Global Migrants",
    "text": "(38) Global Migrants\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#english-coal-exports-ii",
    "href": "material/minard/index.html#english-coal-exports-ii",
    "title": "The Minard System in R",
    "section": "(41) English Coal Exports II",
    "text": "(41) English Coal Exports II\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#post-offices-in-paris",
    "href": "material/minard/index.html#post-offices-in-paris",
    "title": "The Minard System in R",
    "section": "(48) Post Offices in Paris",
    "text": "(48) Post Offices in Paris\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#french-wine-exports",
    "href": "material/minard/index.html#french-wine-exports",
    "title": "The Minard System in R",
    "section": "(50) French Wine Exports",
    "text": "(50) French Wine Exports\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#english-coal-exports-iii",
    "href": "material/minard/index.html#english-coal-exports-iii",
    "title": "The Minard System in R",
    "section": "(53) English Coal Exports III",
    "text": "(53) English Coal Exports III\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#global-coal-production",
    "href": "material/minard/index.html#global-coal-production",
    "title": "The Minard System in R",
    "section": "(54) Global Coal Production",
    "text": "(54) Global Coal Production\n\nCode"
  },
  {
    "objectID": "material/minard/index.html#napoleons-campaign",
    "href": "material/minard/index.html#napoleons-campaign",
    "title": "The Minard System in R",
    "section": "(60) Napoleon’s Campaign",
    "text": "(60) Napoleon’s Campaign\n\nCode"
  },
  {
    "objectID": "material/galaxies/index.html",
    "href": "material/galaxies/index.html",
    "title": "Rendering Galaxies in R",
    "section": "",
    "text": "Code\n\n\nRender galaxies, Blackholes and Star constellations in R\nThis was a project of mine in 2020 when I had an ambition to get into generative art. I abandoned that idea after this project because it just took too much time (and I lost motivation again…) I decided to release the code behind the project for everyone to play around with (see link above). You can do whatever you want with it. Problem is that I neither documented the code nor my resources. So it may take some time and effort to understand what is going on.\n\n\n\nExample Galaxies\n        \n\n\nExample Blackholes\n \n\n\nExample Constellations"
  },
  {
    "objectID": "material/football-data/index.html",
    "href": "material/football-data/index.html",
    "title": "Soccer Data",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "material/football-data/index.html#codebook",
    "href": "material/football-data/index.html#codebook",
    "title": "Soccer Data",
    "section": "Codebook",
    "text": "Codebook\n\n\n\n\n\n\n\nvariable\ndescription\n\n\n\n\nhome\nhome team name (not necessarily unique)\n\n\naway\naway team name (not necessarily unique)\n\n\ndate\ndate of match\n\n\ngh\ngoals for home team (including extra time and penalties)\n\n\nga\ngoals for away team (including extra time and penalties)\n\n\nfull_time\n“F”=game ended in 90’, “E”=extra time, “P”=penalty shoot-out\n\n\ncompetition\ncountry name of league or name of international competition\n\n\nhome_ident\nunique identifier of home team\n\n\naway_ident\nunique identifier of away team\n\n\nhome_country\ncountry of home team\n\n\naway_country\ncountry of away team\n\n\nhome_code\ncountry code of home team\n\n\naway_code\ncountry code of away team\n\n\nhome_continent\ncontinent of home team\n\n\naway_continent\ncontinent of away team\n\n\ncontinent\ncontinent of competition\n\n\nlevel\n“national”= domestic league, “international”= international cup"
  },
  {
    "objectID": "material/football-data/index.html#rscipts",
    "href": "material/football-data/index.html#rscipts",
    "title": "Soccer Data",
    "section": "Rscipts",
    "text": "Rscipts\nThe folder Rscripts contains some R code with basic analyses which could get you going:\n\n01_basic_stats.R: very simple stats (number of games, goals, etc)\n02_soccerverse.R: some code for figures on soccerverse.com"
  },
  {
    "objectID": "material/football-data/index.html#disclaimer",
    "href": "material/football-data/index.html#disclaimer",
    "title": "Soccer Data",
    "section": "Disclaimer",
    "text": "Disclaimer\nThis dataset definitely contains errors, especially for older games, where sources are not as reliable. A big issue are teams that merge/split/dissolve over time, which (I think) I did not resolve consistently over time.\nI have gathered this dataset over the course of 8 years and put a lot of effort in it (see soccerverse.com). If you use the data for any kind of project, please drop me a line or ping me on twitter. I hapilly include your results on soccerverse.com too."
  },
  {
    "objectID": "material/netVizR/index.html",
    "href": "material/netVizR/index.html",
    "title": "Network Visualizations in R",
    "section": "",
    "text": "Most network analytic tasks are fairly straightforward to do in R. But when it comes to visualizing networks, R may lack behind some standalone software tools. Not because it is not possible to produce nice figures, but rather because it requires some time to obtain pleasing results. Just take a look at the default output when plotting a network with the plot() function.\n\nlibrary(networkdata)\ndata(\"got\")\n\ngotS1 &lt;- got[[1]]\nplot(gotS1)\n\n\n\n\n\n\n\n\nIt is definitely possible to produce nice figures with the igraph package (Check out this wonderful tutorial), yet it may take some time to familiarize yourself with the syntax. Additionally, most of the layout algorithms of igraph are non-deterministic. This means that running the same plot call twice may produce different results.\nIn this tutorial, you will learn the basics of ggraph, the “ggplot2 of networks”, together with the graphlayouts package, which introduces additional useful layout algorithms to R. Arguably, using ggraph is not really easier than igraph. But once the underlying principle of the grammar of graphics is understood, you’ll see that it is actually quite intuitive to work with.\n\n\nTo run all the code in this tutorial, you need to install and load several packages.\n\ninstall.packages(c(\"igraph\", \"graphlayouts\", \"ggraph\",\"ggforce\"))\ndevtools::install_github(\"schochastics/networkdata\")\n\nMake sure you have at least the version given below. Some of the examples may not be backward compatible.\n\npackageVersion(\"igraph\")\n\n[1] '1.3.5'\n\npackageVersion(\"graphlayouts\")\n\n[1] '0.8.4'\n\npackageVersion(\"ggraph\")\n\n[1] '2.1.0'\n\npackageVersion(\"networkdata\")\n\n[1] '0.1.14'\n\npackageVersion(\"ggforce\")\n\n[1] '0.4.1'\n\n\nigraph is mostly used for its data structures and graphlayouts and ggraph for visualizations. The networkdata package contains a huge amount of example network data that always comes in handy for learning new visualization techniques.\n\nlibrary(igraph)\nlibrary(ggraph)\nlibrary(graphlayouts)\nlibrary(ggforce)\n\n\n\n\nIt is always a good idea to take a quick look at your network before starting any analysis. This can be done with the function autograph() from the ggraph package.\n\nautograph(gotS1)\n\n\n\n\n\n\n\n\nautograph() allows you to specify node/edge colours too but it really is only meant to give you a quick overview without writing a massive amount of code. Think of it as the plot() function for ggraph\nBefore we continue, we add some more node attributes to the GoT network that can be used during visualization.\n\n# define a custom color palette\ngot_palette &lt;- c(\n  \"#1A5878\", \"#C44237\", \"#AD8941\", \"#E99093\",\n  \"#50594B\", \"#8968CD\", \"#9ACD32\"\n)\n\n# compute a clustering for node colors\nV(gotS1)$clu &lt;- as.character(membership(cluster_louvain(gotS1)))\n\n# compute degree as node size\nV(gotS1)$size &lt;- degree(gotS1)"
  },
  {
    "objectID": "material/netVizR/index.html#required-libraries",
    "href": "material/netVizR/index.html#required-libraries",
    "title": "Network Visualizations in R",
    "section": "",
    "text": "To run all the code in this tutorial, you need to install and load several packages.\n\ninstall.packages(c(\"igraph\", \"graphlayouts\", \"ggraph\",\"ggforce\"))\ndevtools::install_github(\"schochastics/networkdata\")\n\nMake sure you have at least the version given below. Some of the examples may not be backward compatible.\n\npackageVersion(\"igraph\")\n\n[1] '1.3.5'\n\npackageVersion(\"graphlayouts\")\n\n[1] '0.8.4'\n\npackageVersion(\"ggraph\")\n\n[1] '2.1.0'\n\npackageVersion(\"networkdata\")\n\n[1] '0.1.14'\n\npackageVersion(\"ggforce\")\n\n[1] '0.4.1'\n\n\nigraph is mostly used for its data structures and graphlayouts and ggraph for visualizations. The networkdata package contains a huge amount of example network data that always comes in handy for learning new visualization techniques.\n\nlibrary(igraph)\nlibrary(ggraph)\nlibrary(graphlayouts)\nlibrary(ggforce)"
  },
  {
    "objectID": "material/netVizR/index.html#quick-plots",
    "href": "material/netVizR/index.html#quick-plots",
    "title": "Network Visualizations in R",
    "section": "",
    "text": "It is always a good idea to take a quick look at your network before starting any analysis. This can be done with the function autograph() from the ggraph package.\n\nautograph(gotS1)\n\n\n\n\n\n\n\n\nautograph() allows you to specify node/edge colours too but it really is only meant to give you a quick overview without writing a massive amount of code. Think of it as the plot() function for ggraph\nBefore we continue, we add some more node attributes to the GoT network that can be used during visualization.\n\n# define a custom color palette\ngot_palette &lt;- c(\n  \"#1A5878\", \"#C44237\", \"#AD8941\", \"#E99093\",\n  \"#50594B\", \"#8968CD\", \"#9ACD32\"\n)\n\n# compute a clustering for node colors\nV(gotS1)$clu &lt;- as.character(membership(cluster_louvain(gotS1)))\n\n# compute degree as node size\nV(gotS1)$size &lt;- degree(gotS1)"
  },
  {
    "objectID": "material/netVizR/index.html#layout",
    "href": "material/netVizR/index.html#layout",
    "title": "Network Visualizations in R",
    "section": "Layout",
    "text": "Layout\n\nggraph(gotS1, layout = \"stress\")\n\nThe first step is to compute a layout. The layout parameter specifies the algorithm to use. The “stress” layout is part of the graphlayouts package and is always a safe choice since it is deterministic and produces nice layouts for almost any graph. I would recommend to use it as your default choice. Other algorithms for, e.g., concentric layouts and clustered networks are described further down in this tutorial. For the sake of completeness, here is a list of layout algorithms of igraph.\n\nc(\n  \"layout_with_dh\", \"layout_with_drl\", \"layout_with_fr\",\n  \"layout_with_gem\", \"layout_with_graphopt\", \"layout_with_kk\",\n  \"layout_with_lgl\", \"layout_with_mds\", \"layout_with_sugiyama\",\n  \"layout_as_bipartite\", \"layout_as_star\", \"layout_as_tree\"\n)\n\nTo use them, you just need the last part of the name.\n\nggraph(gotS1, layout = \"dh\") +\n  ...\n\nNote that there technically is no right or wrong choice. All layout algorithms are in a sense arbitrary since we can choose x and y coordinates freely (compare this to ordinary data!). It is all mostly about aesthetics.\nYou can also precompute the layout with the create_layout() function. This makes sense in cases where the calculation of the layout takes very long and you want to play around with other visual aspects.\n\ngotS1_layout &lt;- create_layout(gotS1 = \"stress\")\n\nggraph(gotS1_layout) +\n  ..."
  },
  {
    "objectID": "material/netVizR/index.html#edges",
    "href": "material/netVizR/index.html#edges",
    "title": "Network Visualizations in R",
    "section": "Edges",
    "text": "Edges\n\ngeom_edge_link0(aes(width = weight), edge_colour = \"grey66\")\n\nThe second layer specifies how to draw the edges. Edges can be drawn in many different ways as the list below shows.\n\nc(\n  \"geom_edge_arc\", \"geom_edge_arc0\", \"geom_edge_arc2\", \"geom_edge_density\",\n  \"geom_edge_diagonal\", \"geom_edge_diagonal0\", \"geom_edge_diagonal2\",\n  \"geom_edge_elbow\", \"geom_edge_elbow0\", \"geom_edge_elbow2\", \"geom_edge_fan\",\n  \"geom_edge_fan0\", \"geom_edge_fan2\", \"geom_edge_hive\", \"geom_edge_hive0\",\n  \"geom_edge_hive2\", \"geom_edge_link\", \"geom_edge_link0\", \"geom_edge_link2\",\n  \"geom_edge_loop\", \"geom_edge_loop0\"\n)\n\nYou can do a lot of fancy things with these geoms but for a standard network plot, you should always stick with geom_edge_link0 since it simply draws a straight line between the endpoints. Some tools draw curved edges by default. While this may add some artistic value, it reduces readability. Always go with straight lines! If your network has multiple edges between two nodes, then you can switch to geom_edge_parallel().\nIn case you are wondering what the “0” stands for: The standard geom_edge_link() draws 100 dots on each edge compared to only two dots (the endpoints) in geom_edge_link0(). This is done to allow, e.g., gradients along the edge.\n\n\n\n\n\n\n\n\n\nYou can reproduce this figure by substituting\n\ngeom_edge_link(aes(edge_alpha = ..index..), edge_colour = \"black\")\n\nin the code above.\nThe drawback of using geom_edge_link() is that the time to render the plot increases and so does the size of the file if you export the plot (example) Typically, you do not need gradients along an edge. Hence, geom_edge_link0() should be your default choice to draw edges.\nWithin geom_edge_link0, you can specify the appearance of the edge, either by mapping edge attributes to aesthetics or setting them globally for the graph. Mapping attributes to aesthetics is done within aes(). In the example, we map the edge width to the edge attribute “weight”. ggraph then automatically scales the edge width according to the attribute. The colour of all edges is globally set to “grey66”.\nThe following aesthetics can be used within geom_edge_link0 either within aes() or globally:\n\nedge_colour (colour of the edge)\nedge_linewidth (width of the edge)\nedge_linetype (linetype of the edge, defaults to “solid”)\nedge_alpha (opacity; a value between 0 and 1)\n\nggraph does not automatically draw arrows if your graph is directed. You need to do this manually using the arrow parameter.\n\ngeom_edge_link0(aes(...), ...,\n  arrow = arrow(\n    angle = 30, length = unit(0.15, \"inches\"),\n    ends = \"last\", type = \"closed\"\n  )\n)\n\nThe default arrowhead type is “open”, yet “closed” usually has a nicer appearance."
  },
  {
    "objectID": "material/netVizR/index.html#nodes",
    "href": "material/netVizR/index.html#nodes",
    "title": "Network Visualizations in R",
    "section": "Nodes",
    "text": "Nodes\n\ngeom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = size &gt;= 26, label = name), family = \"serif\")\n\nOn top of the edge layer, we draw the node layer. Always draw the node layer above the edge layer. Otherwise, edges will be visible on top of nodes. There are slightly less geoms available for nodes.\n\nc(\n  \"geom_node_arc_bar\", \"geom_node_circle\", \"geom_node_label\",\n  \"geom_node_point\", \"geom_node_text\", \"geom_node_tile\", \"geom_node_treemap\"\n)\n\nThe most important ones here are geom_node_point() to draw nodes as simple geometric objects (circles, squares,…) and geom_node_text() to add node labels. You can also use geom_node_label(), but this draws labels within a box.\nThe mapping of node attributes to aesthetics is similar to edge attributes. In the example code, we map the fill attribute of the node shape to the “clu” attribute, which holds the result of a clustering, and the size of the nodes to the attribute “size”. The shape of the node is globally set to 21.\nThe figure below shows all possible shapes that can be used for the nodes.\n\nPersonally, I prefer “21” since it draws a border around the nodes. If you prefer another shape, say “19”, you have to be aware of several things. To change the color of shapes 1-20, you need to use the colour parameter. For shapes 21-25 you need to use fill. The colour parameter only controls the border for these cases.\nThe following aesthetics can be used within geom_node_point() either within aes() or globally:\n\nalpha (opacity; a value between 0 and 1)\ncolour (colour of shapes 0-20 and border colour for 21-25)\nfill (fill colour for shape 21-25)\nshape (node shape; a value between 0 and 25)\nsize (size of node)\nstroke (size of node border)\n\nFor geom_node_text(), there are a lot more options available, but the most important once are:\n\nlabel (attribute to be displayed as node label)\ncolour (text colour)\nfamily (font to be used)\nsize (font size)\n\nNote that we also used a filter within aes() of geom_node_text(). The filter parameter allows you to specify a rule for when to apply the aesthetic mappings. The most frequent use case is for node labels (but can also be used for edges or nodes). In the example, we only display the node label if the size attribute is larger than 26."
  },
  {
    "objectID": "material/netVizR/index.html#scales",
    "href": "material/netVizR/index.html#scales",
    "title": "Network Visualizations in R",
    "section": "Scales",
    "text": "Scales\n\nscale_fill_manual(values = got_palette) +\n  scale_edge_width_continuous(range = c(0.2, 3)) +\n  scale_size_continuous(range = c(1, 6))\n\nThe scale_* functions are used to control aesthetics that are mapped within aes(). You do not necessarily need to set them, since ggraph can take care of it automatically.\n\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_linewidth = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = size &gt;= 26, label = name), family = \"serif\") +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nWhile the node fill and size seem reasonable, the edges are a little too thick. In general, it is always a good idea to add a scale_* for each aesthetic within aes().\nWhat kind of scale_* function you need depends on the aesthetic and on the type of attribute you are mapping. Generally, scale functions are structured like this:\nscale_&lt;aes&gt;_&lt;variable type&gt;().\nThe “aes” part is easy. Just us the type you specified within aes(). For edges, however, you have to prepend edge_. The “variable type” part depends on which scale the attribute is on. Before we continue, it may be a good idea to briefly discuss what aesthetics make sense for which variable type.\n\n\n\n\n\n\n\n\naesthetic\nvariable type\nnotes\n\n\n\n\nnode size\ncontinuous\n\n\n\nedge width\ncontinuous\n\n\n\nnode colour/fill\ncategorical/continuous\nuse a gradient for continuous variables\n\n\nedge colour\ncontinuous\ncategorical only if there are different types of edges\n\n\nnode shape\ncategorical\nonly if there are a few categories (1-5). Colour should be the preferred choice\n\n\nedge linetype\ncategorical\nonly if there are a few categories (1-5). Colour should be the preferred choice\n\n\nnode/edge alpha\ncontinuous\n\n\n\n\nThe easiest to use scales are those for continuous variables mapped to edge width and node size (also the alpha value, which is not used here). While there are several parameters within scale_edge_width_continuous() and scale_size_continuous(), the most important one is “range” which fixes the minimum and maximum width/size. It usually suffices to adjust this parameter.\nFor continuous variables that are mapped to node/edge colour, you can use scale_colour_gradient() scale_colour_gradient2() or scale_colour_gradientn() (add edge_ before colour for edge colours). The difference between these functions is in how the gradient is constructed. gradient creates a two colour gradient (low-high). Simply specify the the two colours to be used (e.g. low = “blue”, high = “red”). gradient2 creates a diverging colour gradient (low-mid-high) (e.g. low = “blue”, mid = “white”, high = “red”) and gradientn a gradient consisting of more than three colours (specified with the colours parameter).\nFor categorical variables that are mapped to node colours (or fill in our example), you can use scale_fill_manual(). This forces you to choose a color for each category yourself. Simply create a vector of colors (see the got_palette) and pass it to the function with the parameter values.\nggraph then assigns the colors in the order of the unique values of the categorical variable. This are either the factor levels (if the variable is a factor) or the result of sorting the unique values (if the variable is a character).\n\nsort(unique(V(gotS1)$clu))\n\n[1] \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\"\n\n\nIf you want more control over which value is mapped to which colour, you can pass the vector of colours as a named vector.\n\ngot_palette2 &lt;- c(\n  \"5\" = \"#1A5878\", \"3\" = \"#C44237\", \"2\" = \"#AD8941\",\n  \"1\" = \"#E99093\", \"4\" = \"#50594B\", \"7\" = \"#8968CD\", \"6\" = \"#9ACD32\"\n)\n\n\n\n\n\n\n\n\n\n\nUsing your own colour palette gives your network a unique touch. If you can’t be bothered with choosing colours, you may want to consider scale_fill_brewer() and scale_colour_brewer(). The function offers all palettes available at colorbrewer2.org.\n\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_linewidth = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = size &gt;= 26, label = name), family = \"serif\") +\n  scale_fill_brewer(palette = \"Dark2\") +\n  scale_edge_width_continuous(range = c(0.2, 3)) +\n  scale_size_continuous(range = c(1, 6)) +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n(Check out this github repo from Emil Hvitfeldt for a comprehensive list of color palettes available in R)"
  },
  {
    "objectID": "material/netVizR/index.html#themes",
    "href": "material/netVizR/index.html#themes",
    "title": "Network Visualizations in R",
    "section": "Themes",
    "text": "Themes\n\ntheme_graph() +\n  theme(legend.position = \"none\")\n\nthemes control the overall look of the plot. There are a lot of options within the theme() function of ggplot2. Luckily, we really don’t need any of those. theme_graph() is used to erase all of the default ggplot theme (e.g. axis, background, grids, etc.) since they are irrelevant for networks. The only option worthwhile in theme() is legend.position, which we set to “none”, i.e. don’t show the legend.\nThe code below gives an example for a plot with a legend.\n\nggraph(gotS1, layout = \"stress\") +\n  geom_edge_link0(aes(edge_linewidth = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = size &gt;= 26, label = name), family = \"serif\") +\n  scale_fill_manual(values = got_palette) +\n  scale_edge_width_continuous(range = c(0.2, 3)) +\n  scale_size_continuous(range = c(1, 6)) +\n  theme_graph() +\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "material/netVizR/index.html#use-the-ggforce",
    "href": "material/netVizR/index.html#use-the-ggforce",
    "title": "Network Visualizations in R",
    "section": "use the ggforce",
    "text": "use the ggforce\nThe ggforce package works pretty nicely with ggraph. You can, for instance, use the geom_mark_*() functions to highlight clusters.\n\nset.seed(665)\n\n#create network with a group structure\ng &lt;- sample_islands(9, 40, 0.4, 15)\ng &lt;- igraph::simplify(g)\nV(g)$grp &lt;- as.character(rep(1:9, each = 40))\n\nbb &lt;- layout_as_backbone(g, keep = 0.4)\nE(g)$col &lt;- F\nE(g)$col[bb$backbone] &lt;- T\n\n\nggraph(g,\n       layout = \"manual\",\n       x = bb$xy[, 1],\n       y = bb$xy[, 2]) +\n  geom_edge_link0(aes(col = col), width = 0.2) +\n  geom_node_point(aes(fill = grp), shape = 21, size = 3) +\n  geom_mark_hull(\n    aes(x, y, group = grp, fill = grp),\n    concavity = 4,\n    expand = unit(2, \"mm\"),\n    alpha = 0.25\n  ) +\n  scale_color_brewer(palette = \"Set1\") +\n  scale_fill_brewer(palette = \"Set1\") +\n  scale_edge_color_manual(values = c(rgb(0, 0, 0, 0.3), rgb(0, 0, 0, 1))) +\n  theme_graph()+\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nOf course you can also add a label to your clusters.\n\nggraph(g,\n       layout = \"manual\",\n       x = bb$xy[, 1],\n       y = bb$xy[, 2]) +\n  geom_edge_link0(aes(col = col), width = 0.2) +\n  geom_node_point(aes(fill = grp), shape = 21, size = 3) +\n  geom_mark_hull(\n    aes(x, y, group = grp, fill = grp, label=grp),\n    concavity = 4,\n    expand = unit(2, \"mm\"),\n    alpha = 0.25\n  ) +\n  scale_color_brewer(palette = \"Set1\") +\n  scale_fill_brewer(palette = \"Set1\") +\n  scale_edge_color_manual(values = c(rgb(0, 0, 0, 0.3), rgb(0, 0, 0, 1))) +\n  theme_graph()+\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nIf you want to avoid node overlaps, you can use geom_node_voronoi(). So this is actually already implemented in {{ggraph}}, but originates from geom_voronoi_tile().\n\nggraph(g,\n       layout = \"manual\",\n       x = bb$xy[, 1],\n       y = bb$xy[, 2]) +\n  geom_edge_link0(aes(filter = !col, col = col), width = 0.2) +\n  geom_node_voronoi(\n    aes(x, y, fill = grp),\n    max.radius = 0.4,\n    expand = unit(-0.5, 'mm'),\n    colour = 'black'\n  ) +\n  scale_color_brewer(palette = \"Set1\") +\n  scale_fill_brewer(palette = \"Set1\") +\n  scale_edge_color_manual(values = c(rgb(0, 0, 0, 0.3), rgb(0, 0, 0, 1))) +\n  theme(\n    legend.position = \"none\",\n    panel.grid = element_blank(),\n    axis.ticks = element_blank(),\n    axis.text = element_blank()\n  ) +\n  theme_graph() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "material/netVizR/index.html#concentric-layouts",
    "href": "material/netVizR/index.html#concentric-layouts",
    "title": "Network Visualizations in R",
    "section": "Concentric layouts",
    "text": "Concentric layouts\nCircular layouts are generally not advisable. Concentric circles, on the other hand, help to emphasize the position of certain nodes in the network. The graphlayouts package has two function to create concentric layouts, layout_with_focus() and layout_with_centrality().\nThe first one allows to focus the network on a specific node and arrange all other nodes in concentric circles (depending on the geodesic distance) around it. Below we focus on the character Ned Stark.\n\nggraph(gotS1, layout = \"focus\", focus = 1) +\n  geom_edge_link0(aes(edge_linewidth = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = (name == \"Ned\"), size = size, label = name),\n    family = \"serif\"\n  ) +\n  scale_edge_width_continuous(range = c(0.2, 1.2)) +\n  scale_size_continuous(range = c(1, 5)) +\n  scale_fill_manual(values = got_palette) +\n  coord_fixed() +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nThe parameter focus in the first line is used to choose the node id of the focal node. The function coord_fixed() is used to always keep the aspect ratio at one (i.e. the circles are always displayed as a circle and not an ellipse).\nThe function draw_circle() can be used to add the circles explicitly.\n\nggraph(gotS1, layout = \"focus\", focus = 1) +\n  draw_circle(col = \"#00BFFF\", use = \"focus\", max.circle = 3) +\n  geom_edge_link0(aes(width = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(filter = (name == \"Ned\"), size = size, label = name),\n    family = \"serif\"\n  ) +\n  scale_edge_width_continuous(range = c(0.2, 1.2)) +\n  scale_size_continuous(range = c(1, 5)) +\n  scale_fill_manual(values = got_palette) +\n  coord_fixed() +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nlayout_with_centrality() works in a similar way. You can specify any centrality index (or any numeric vector for that matter), and create a concentric layout where the most central nodes are put in the center and the most peripheral nodes in the biggest circle. The numeric attribute used for the layout is specified with the cent parameter. Here, we use the weighted degree of the characters.\n\nggraph(gotS1, layout = \"centrality\", cent = graph.strength(gotS1)) +\n  geom_edge_link0(aes(edge_linewidth = weight), edge_colour = \"grey66\") +\n  geom_node_point(aes(fill = clu, size = size), shape = 21) +\n  geom_node_text(aes(size = size, label = name), family = \"serif\") +\n  scale_edge_width_continuous(range = c(0.2, 0.9)) +\n  scale_size_continuous(range = c(1, 8)) +\n  scale_fill_manual(values = got_palette) +\n  coord_fixed() +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n(Concentric layouts are not only helpful to focus on specific nodes, but also make for a good tool to visualize ego networks.)"
  },
  {
    "objectID": "material/netVizR/index.html#backbone-layout",
    "href": "material/netVizR/index.html#backbone-layout",
    "title": "Network Visualizations in R",
    "section": "Backbone layout",
    "text": "Backbone layout\nlayout_as_backbone() is a layout algorithm that can help emphasize hidden group structures. To illustrate the performance of the algorithm, we create an artificial network with a subtle group structure using sample_islands() from igraph.\n\ng &lt;- sample_islands(9, 40, 0.4, 15)\ng &lt;- simplify(g)\nV(g)$grp &lt;- as.character(rep(1:9, each = 40))\n\nThe network consists of 9 groups with 40 vertices each. The density within each group is 0.4 and there are 15 edges running between each pair of groups. Let us try to visualize the network with what we have learned so far.\n\nggraph(g, layout = \"stress\") +\n  geom_edge_link0(edge_colour = \"black\", edge_linewidth = 0.1, edge_alpha = 0.5) +\n  geom_node_point(aes(fill = grp), shape = 21) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nAs you can see, the graph seems to be a proper “hairball” without any special structural features standing out. In this case, though, we know that there should be 9 groups of vertices that are internally more densely connected than externally. To uncover this group structure, we turn to the “backbone layout”.\n\nbb &lt;- layout_as_backbone(g, keep = 0.4)\nE(g)$col &lt;- FALSE\nE(g)$col[bb$backbone] &lt;- TRUE\n\nThe idea of the algorithm is as follows. For each edge, an embededness score is calculated which serves as an edge weight attribute. These weights are then ordered and only the edges with the highest score are kept. The number of edges to keep is controlled with the keep parameter. In our example, we keep the top 40%. The parameter usually requires some experimenting to find out what works best. Since this may result in an unconnected network, we add all edges of the union of all maximum spanning trees. The resulting network is the “backbone” of the original network and the “stress” layout algorithm is applied to this network. Once the layout is calculated, all edges are added back to the network.\nThe output of the function are the x and y coordinates for nodes and a vector that gives the ids of the edges in the backbone network. In the code above, we use this vector to create a binary edge attribute that indicates if an edge is part of the backbone or not.\nTo use the coordinates, we set the layout parameter to “manual” and provide the x and y coordinates as parameters.\n\nggraph(g, layout = \"manual\", x = bb$xy[, 1], y = bb$xy[, 2]) +\n  geom_edge_link0(aes(edge_colour = col), edge_linewidth = 0.1) +\n  geom_node_point(aes(fill = grp), shape = 21) +\n  scale_fill_brewer(palette = \"Set1\") +\n  scale_edge_color_manual(values = c(rgb(0, 0, 0, 0.3), rgb(0, 0, 0, 1))) +\n  theme_graph() +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\nThe groups are now clearly visible! Of course the network used in the example is specifically tailored to illustrate the power of the algorithm. Using the backbone layout in real world networks may not always result in such a clear division of groups. It should thus not be seen as a universal remedy for drawing hairball networks. Keep in mind: It can only emphasize a hidden group structure if it exists.\nThe plot below shows an empirical example where the algorithm was able to uncover a hidden group structure. The network shows facebook friendships of a university in the US. Node colour corresponds to dormitory of students. Left is the ordinary stress layout and right the backbone layout."
  },
  {
    "objectID": "material/netVizR/index.html#dynamic-networks",
    "href": "material/netVizR/index.html#dynamic-networks",
    "title": "Network Visualizations in R",
    "section": "Dynamic networks",
    "text": "Dynamic networks\nPeople regularly ask me if it is possible to animate a network evolution with ggraph and gganimate. Unfortunately this is not yet possible. But fear not! There is a way to still get it done with some hacking around the ggraph package. I will walk through this hack below but hope that it will eventually become obsolete.\nFor this part of the tutorial, you will need two additional packages.\n\nlibrary(gganimate)\nlibrary(ggplot2)\nlibrary(patchwork)\n\nWe will be using the 50 actor excerpt from the Teenage Friends and Lifestyle Study from the RSiena data repository as an example. The data is part of the networkdata package.\n\ndata(\"s50\")\n\nThe dataset consists of three networks with 50 actors each and a vertex attribute for the smoking behaviour of students. As a first step, we need to create a layout for all three networks. You can basically use any type of layout for each network, but I’d recommend layout_as_dynamic() from my very own package {{graphlayouts}}. The algorithm calculates a reference layout which is a layout of the union of all networks and individual layouts based on stress minimization and combines those in a linear combination which is controlled by the alpha parameter. For alpha=1, only the reference layout is used and all graphs have the same layout. For alpha=0, the stress layout of each individual graph is used. Values in-between interpolate between the two layouts.\n\nxy &lt;- layout_as_dynamic(s50, alpha = 0.2)\n\nNow you could use {{ggraph}} and {{patchwork}} to produce a static plot with all networks side-by-side.\n\npList &lt;- vector(\"list\", length(s50))\n\nfor (i in 1:length(s50)) {\n  pList[[i]] &lt;- ggraph(s50[[i]], layout = \"manual\", x = xy[[i]][, 1], y = xy[[i]][, 2]) +\n    geom_edge_link0(edge_linewidth = 0.6, edge_colour = \"grey66\") +\n    geom_node_point(shape = 21, aes(fill = as.factor(smoke)), size = 6) +\n    geom_node_text(label = 1:50, repel = FALSE, color = \"white\", size = 4) +\n    scale_fill_manual(\n      values = c(\"forestgreen\", \"grey25\", \"firebrick\"),\n      guide = ifelse(i != 2, \"none\", \"legend\"),\n      name = \"smoking\",\n      labels = c(\"never\", \"occasionally\", \"regularly\")\n    ) +\n    theme_graph() +\n    theme(legend.position = \"bottom\") +\n    labs(title = paste0(\"Wave \", i))\n}\n\nwrap_plots(pList)\n\n\n\n\n\n\n\n\nThis is nice but of course we want to animate the changes. This is where we say goodbye to ggraph and hello to good-old ggplot2. First, we create a list of data frames for all nodes and add the layout to it.\n\nnodes_lst &lt;- lapply(1:length(s50), function(i) {\n  cbind(igraph::as_data_frame(s50[[i]], \"vertices\"),\n    x = xy[[i]][, 1], y = xy[[i]][, 2], frame = i\n  )\n})\n\nThis was the easy part, because all nodes are present in all time frames so there is not much to do. Edges will be a lot trickier.\n\nedges_lst &lt;- lapply(1:length(s50), function(i) {\n  cbind(igraph::as_data_frame(s50[[i]], \"edges\"), frame = i)\n})\n\nedges_lst &lt;- lapply(1:length(s50), function(i) {\n  edges_lst[[i]]$x &lt;- nodes_lst[[i]]$x[match(edges_lst[[i]]$from, nodes_lst[[i]]$name)]\n  edges_lst[[i]]$y &lt;- nodes_lst[[i]]$y[match(edges_lst[[i]]$from, nodes_lst[[i]]$name)]\n  edges_lst[[i]]$xend &lt;- nodes_lst[[i]]$x[match(edges_lst[[i]]$to, nodes_lst[[i]]$name)]\n  edges_lst[[i]]$yend &lt;- nodes_lst[[i]]$y[match(edges_lst[[i]]$to, nodes_lst[[i]]$name)]\n  edges_lst[[i]]$id &lt;- paste0(edges_lst[[i]]$from, \"-\", edges_lst[[i]]$to)\n  edges_lst[[i]]$status &lt;- TRUE\n  edges_lst[[i]]\n})\n\nhead(edges_lst[[1]])\n\n  from  to frame        x        y     xend      yend     id status\n1   V1 V11     1  1.89891  0.39497  2.18308 -0.607441 V1-V11   TRUE\n2   V1 V14     1  1.89891  0.39497  2.48248  0.349492 V1-V14   TRUE\n3   V2  V7     1  3.66686 -1.22147  3.89081 -1.863693  V2-V7   TRUE\n4   V2 V11     1  3.66686 -1.22147  2.18308 -0.607441 V2-V11   TRUE\n5   V3  V4     1 -4.88505 -2.32031 -3.86935 -2.516477  V3-V4   TRUE\n6   V3  V9     1 -4.88505 -2.32031 -5.44869 -2.992036  V3-V9   TRUE\n\n\nWe have expanded the edge data frame in a way that also includes the coordinates of the endpoints from the layout that we calculated earlier.\nNow we create a helper matrix which includes all edges that are present in any of the networks\n\nall_edges &lt;- do.call(\"rbind\", lapply(s50, get.edgelist))\nall_edges &lt;- all_edges[!duplicated(all_edges), ]\nall_edges &lt;- cbind(all_edges, paste0(all_edges[, 1], \"-\", all_edges[, 2]))\n\nThis is used to impute the edges into all networks. So any edge that is not present in time frame two and three gets added to time frame one. But to keep track of these, we set there status to FALSE.\n\nedges_lst &lt;- lapply(1:length(s50), function(i) {\n  idx &lt;- which(!all_edges[, 3] %in% edges_lst[[i]]$id)\n  if (length(idx != 0)) {\n    tmp &lt;- data.frame(from = all_edges[idx, 1], to = all_edges[idx, 2], id = all_edges[idx, 3])\n    tmp$x &lt;- nodes_lst[[i]]$x[match(tmp$from, nodes_lst[[i]]$name)]\n    tmp$y &lt;- nodes_lst[[i]]$y[match(tmp$from, nodes_lst[[i]]$name)]\n    tmp$xend &lt;- nodes_lst[[i]]$x[match(tmp$to, nodes_lst[[i]]$name)]\n    tmp$yend &lt;- nodes_lst[[i]]$y[match(tmp$to, nodes_lst[[i]]$name)]\n    tmp$frame &lt;- i\n    tmp$status &lt;- FALSE\n    edges_lst[[i]] &lt;- rbind(edges_lst[[i]], tmp)\n  }\n  edges_lst[[i]]\n})\n\nWhy are we doing this? After a lot of experimenting, I came to the conclusion that it is always best to draw all edges, but use zero opacity if status = FALSE. In that way, one gets a smoother transition for edges that (dis)appear. There are probably other workarounds though.\nIn the last step, we create a data frame out of the lists.\n\nedges_df &lt;- do.call(\"rbind\", edges_lst)\nnodes_df &lt;- do.call(\"rbind\", nodes_lst)\n\nhead(edges_df)\n\n  from  to frame        x        y     xend      yend     id status\n1   V1 V11     1  1.89891  0.39497  2.18308 -0.607441 V1-V11   TRUE\n2   V1 V14     1  1.89891  0.39497  2.48248  0.349492 V1-V14   TRUE\n3   V2  V7     1  3.66686 -1.22147  3.89081 -1.863693  V2-V7   TRUE\n4   V2 V11     1  3.66686 -1.22147  2.18308 -0.607441 V2-V11   TRUE\n5   V3  V4     1 -4.88505 -2.32031 -3.86935 -2.516477  V3-V4   TRUE\n6   V3  V9     1 -4.88505 -2.32031 -5.44869 -2.992036  V3-V9   TRUE\n\nhead(nodes_df)\n\n   name smoke        x        y frame\nV1   V1     2  1.89891  0.39497     1\nV2   V2     3  3.66686 -1.22147     1\nV3   V3     1 -4.88505 -2.32031     1\nV4   V4     1 -3.86935 -2.51648     1\nV5   V5     1 -2.85662 -3.04834     1\nV6   V6     1 -1.62910 -5.01750     1\n\n\nAnd that’s it in terms of data wrangling. All that is left is to plot/animate the data.\n\nggplot() +\n  geom_segment(\n    data = edges_df,\n    aes(x = x, xend = xend, y = y, yend = yend, group = id, alpha = status),\n    show.legend = FALSE\n  ) +\n  geom_point(\n    data = nodes_df, aes(x, y, group = name, fill = as.factor(smoke)),\n    shape = 21, size = 4, show.legend = FALSE\n  ) +\n  scale_fill_manual(values = c(\"forestgreen\", \"grey25\", \"firebrick\")) +\n  scale_alpha_manual(values = c(0, 1)) +\n  ease_aes(\"quadratic-in-out\") +\n  transition_states(frame, state_length = 0.5, wrap = FALSE) +\n  labs(title = \"Wave {closest_state}\") +\n  theme_void()"
  },
  {
    "objectID": "material/netVizR/index.html#multilevel-networks",
    "href": "material/netVizR/index.html#multilevel-networks",
    "title": "Network Visualizations in R",
    "section": "Multilevel networks",
    "text": "Multilevel networks\nIn this section, you will get to know layout_as_multilevel(), a layout algorithm in the raphlayouts package which can be use to visualize multilevel networks.\nA multilevel network consists of two (or more) levels with different node sets and intra-level ties. For instance, one level could be scientists and their collaborative ties and the second level are labs and ties among them, and inter-level edges are the affiliations of scientists and labs.\nThe graphlayouts package contains an artificial multilevel network which will be used to illustrate the algorithm.\n\ndata(\"multilvl_ex\")\n\nThe package assumes that a multilevel network has a vertex attribute called lvl which holds the level information (1 or 2).\nThe underlying algorithm of layout_as_multilevel() has three different versions, which can be used to emphasize different structural features of a multilevel network.\nIndependent of which option is chosen, the algorithm internally produces a 3D layout, where each level is positioned on a different y-plane. The 3D layout is then mapped to 2D with an isometric projection. The parameters alpha and beta control the perspective of the projection. The default values seem to work for many instances, but may not always be optimal. As a rough guideline: beta rotates the plot around the y axis (in 3D) and alpha moves the POV up or down.\n\nComplete layout\nA layout for the complete network can be computed via layout_as_multilevel() setting type = \"all\". Internally, the algorithm produces a constrained 3D stress layout (each level on a different y plane) which is then projected to 2D. This layout ignores potential differences in each level and optimizes only the overall layout.\n\nxy &lt;- layout_as_multilevel(multilvl_ex, type = \"all\", alpha = 25, beta = 45)\n\nTo visualize the network with ggraph, you may want to draw the edges for each level (and inter level edges) with a different edge geom. This gives you more flexibility to control aesthetics and can easily be achieved with a filter.\n\nggraph(multilvl_ex, \"manual\", x = xy[, 1], y = xy[, 2]) +\n  geom_edge_link0(\n    aes(filter = (node1.lvl == 1 & node2.lvl == 1)),\n    edge_colour = \"firebrick3\",\n    alpha = 0.5,\n    edge_linewidth = 0.3\n  ) +\n  geom_edge_link0(\n    aes(filter = (node1.lvl != node2.lvl)),\n    alpha = 0.3,\n    edge_linewidth = 0.1,\n    edge_colour = \"black\"\n  ) +\n  geom_edge_link0(\n    aes(filter = (node1.lvl == 2 &\n      node2.lvl == 2)),\n    edge_colour = \"goldenrod3\",\n    edge_linewidth = 0.3,\n    alpha = 0.5\n  ) +\n  geom_node_point(aes(shape = as.factor(lvl)), fill = \"grey25\", size = 3) +\n  scale_shape_manual(values = c(21, 22)) +\n  theme_graph() +\n  coord_cartesian(clip = \"off\", expand = TRUE) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nSeparate layouts for both levels\nIn many instances, there may be different structural properties inherent to the levels of the network. In that case, two layout functions can be passed to layout_as_multilevel() to deal with these differences. In our artificial network, level 1 has a hidden group structure and level 2 has a core-periphery structure.\nTo use this layout option, set type = \"separate\" and specify two layout functions with FUN1 and FUN2. You can change internal parameters of these layout functions with named lists in the params1 and params2 argument. Note that this version optimizes inter-level edges only minimally. The emphasis is on the intra-level structures.\n\nxy &lt;- layout_as_multilevel(multilvl_ex,\n  type = \"separate\",\n  FUN1 = layout_as_backbone,\n  FUN2 = layout_with_stress,\n  alpha = 25, beta = 45\n)\n\nAgain, try to include an edge geom for each level.\n\ncols2 &lt;- c(\n  \"#3A5FCD\", \"#CD00CD\", \"#EE30A7\", \"#EE6363\",\n  \"#CD2626\", \"#458B00\", \"#EEB422\", \"#EE7600\"\n)\n\nggraph(multilvl_ex, \"manual\", x = xy[, 1], y = xy[, 2]) +\n  geom_edge_link0(aes(\n    filter = (node1.lvl == 1 & node2.lvl == 1),\n    edge_colour = col\n  ),\n  alpha = 0.5, edge_linewidth = 0.3\n  ) +\n  geom_edge_link0(\n    aes(filter = (node1.lvl != node2.lvl)),\n    alpha = 0.3,\n    edge_linewidth = 0.1,\n    edge_colour = \"black\"\n  ) +\n  geom_edge_link0(aes(\n    filter = (node1.lvl == 2 & node2.lvl == 2),\n    edge_colour = col\n  ),\n  edge_linewidth = 0.3, alpha = 0.5\n  ) +\n  geom_node_point(aes(\n    fill = as.factor(grp),\n    shape = as.factor(lvl),\n    size = nsize\n  )) +\n  scale_shape_manual(values = c(21, 22)) +\n  scale_size_continuous(range = c(1.5, 4.5)) +\n  scale_fill_manual(values = cols2) +\n  scale_edge_color_manual(values = cols2, na.value = \"grey12\") +\n  scale_edge_alpha_manual(values = c(0.1, 0.7)) +\n  theme_graph() +\n  coord_cartesian(clip = \"off\", expand = TRUE) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\nFix only one level\nThis layout can be used to emphasize one intra-level structure. The layout of the second level is calculated in a way that optimizes inter-level edge placement. Set type = \"fix1\" and specify FUN1 and possibly params1 to fix level 1 or set type = \"fix2\" and specify FUN2 and possibly params2 to fix level 2.\n\nxy &lt;- layout_as_multilevel(multilvl_ex,\n  type = \"fix2\",\n  FUN2 = layout_with_stress,\n  alpha = 25, beta = 45\n)\n\nggraph(multilvl_ex, \"manual\", x = xy[, 1], y = xy[, 2]) +\n  geom_edge_link0(aes(\n    filter = (node1.lvl == 1 & node2.lvl == 1),\n    edge_colour = col\n  ),\n  alpha = 0.5, edge_linewidth = 0.3\n  ) +\n  geom_edge_link0(\n    aes(filter = (node1.lvl != node2.lvl)),\n    alpha = 0.3,\n    edge_linewidth = 0.1,\n    edge_colour = \"black\"\n  ) +\n  geom_edge_link0(aes(\n    filter = (node1.lvl == 2 & node2.lvl == 2),\n    edge_colour = col\n  ),\n  edge_linewidth = 0.3, alpha = 0.5\n  ) +\n  geom_node_point(aes(\n    fill = as.factor(grp),\n    shape = as.factor(lvl),\n    size = nsize\n  )) +\n  scale_shape_manual(values = c(21, 22)) +\n  scale_size_continuous(range = c(1.5, 4.5)) +\n  scale_fill_manual(values = cols2) +\n  scale_edge_color_manual(values = cols2, na.value = \"grey12\") +\n  scale_edge_alpha_manual(values = c(0.1, 0.7)) +\n  theme_graph() +\n  coord_cartesian(clip = \"off\", expand = TRUE) +\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n3D with threejs\nInstead of the default 2D projection, layout_as_multilevel() can also return the 3D layout by setting project2d = FALSE. The 3D layout can then be used with e.g. threejs to produce an interactive 3D visualization.\n\nlibrary(threejs)\nxyz &lt;- layout_as_multilevel(multilvl_ex,\n  type = \"separate\",\n  FUN1 = layout_as_backbone,\n  FUN2 = layout_with_stress,\n  project2D = FALSE\n)\nmultilvl_ex$layout &lt;- xyz\nV(multilvl_ex)$color &lt;- c(\"#00BFFF\", \"#FF69B4\")[V(multilvl_ex)$lvl]\nV(multilvl_ex)$vertex.label &lt;- V(multilvl_ex)$name\n\ngraphjs(multilvl_ex, bg = \"black\", vertex.shape = \"sphere\")"
  },
  {
    "objectID": "attribution.html",
    "href": "attribution.html",
    "title": "Fine Print",
    "section": "",
    "text": "Made with Hugo Apéro, which is based on Blogophonic by Formspree. Powered by blogdown and built by Hugo."
  },
  {
    "objectID": "attribution.html#made-with-hugo-apéro-and-blogdown",
    "href": "attribution.html#made-with-hugo-apéro-and-blogdown",
    "title": "Fine Print",
    "section": "",
    "text": "Made with Hugo Apéro, which is based on Blogophonic by Formspree. Powered by blogdown and built by Hugo."
  },
  {
    "objectID": "attribution.html#license",
    "href": "attribution.html#license",
    "title": "Fine Print",
    "section": "License",
    "text": "License\nMy blog posts are released under a Creative Commons Attribution-ShareAlike 4.0 International License.\n\n\n\nUnless otherwise specified, code presented in blog posts are released under the MIT license."
  },
  {
    "objectID": "publications/us_congress/index.html",
    "href": "publications/us_congress/index.html",
    "title": "Legislators’ roll-call voting behavior increasingly corresponds to intervals in the political spectrum",
    "section": "",
    "text": "oa journal"
  },
  {
    "objectID": "publications/us_congress/index.html#abstract",
    "href": "publications/us_congress/index.html#abstract",
    "title": "Legislators’ roll-call voting behavior increasingly corresponds to intervals in the political spectrum",
    "section": "Abstract",
    "text": "Abstract\nScaling techniques such as the well known NOMINATE position political actors in a low dimensional space to represent the similarity or dissimilarity of their political orientation based on roll-call voting patterns. Starting from the same kind of data we propose an alternative, discrete, representation that replaces positions (points and distances) with niches (boxes and overlap). In the one-dimensional case, this corresponds to replacing the left-to-right ordering of points on the real line with an interval order. As it turns out, this seemingly simplistic one-dimensional model is sufficient to represent the similarity of roll-call votes by U.S. senators in recent years. In a historic context, however, low dimensionality represents the exception which stands in contrast to what is suggested by scaling techniques.\nScientific Reports 10 (1), 1-9"
  },
  {
    "objectID": "publications/inout_centrality/index.html",
    "href": "publications/inout_centrality/index.html",
    "title": "An extended family of measures for directed networks",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/inout_centrality/index.html#abstract",
    "href": "publications/inout_centrality/index.html#abstract",
    "title": "An extended family of measures for directed networks",
    "section": "Abstract",
    "text": "Abstract\nCentrality indices such as β-centrality, Katz status, and Hubbell’s index are commonly generalized to directed networks by relating the in-centrality of nodes to the in-centrality of their in-neighbors and equivalently so for out-centrality. This paper proposes an extension of Bonacich’s β-centrality and related measures for directed networks where the in-centrality of a node depends on the out-centrality of their in-neighbors and their out-centrality on the in-centrality of their out- neighbors. The so defined indices extend hubs and authorities in the same way as β-centrality generalizes eigenvector centrality. Several technical results are presented including the extension of the range of permissible β parameters to negative values, similar to traditional β- centrality.\nSocial Networks 70:334-340, 2022"
  },
  {
    "objectID": "publications/index.html",
    "href": "publications/index.html",
    "title": "Publications",
    "section": "",
    "text": "Penalty shootouts are tough, but the alternating order is fair\n\n\nSilvan Vollmer and David Schoch and Ulrik Brandes\n\n\nWe compare conversion rates of association football (soccer) penalties during regulation or extra time with those during shootouts. Our data consists of roughly 50,000 penalties from the eleven~most recent seasons in European men’s football competitions \n\n\n\n\n\nOct 7, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nComputational Reproducibility in Computational Social Science\n\n\nDavid Schoch and Chung-hong Chan and Claudia Wagner and Arnim Bleier\n\n\nIn the last decade, replication and reproducibility crises have shaken the scientific landscape. As potential solutions, open science practices were heavily discussed and have been implemented with varying success in different disciplines. We argue, however, that the binary definition of reproducibility, specifically for computational-X disciplines such as computational social science, is insufficient since it is not explicit about the agents and conditions under which results can be reproduced. \n\n\n\n\n\nJul 4, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nThe interplay of structural features and observed dissimilarities among centrality indices\n\n\nDavid Schoch and Termeh Shafie\n\n\nAn abundance of centrality indices has been proposed which capture the importance of nodes in a network based on different structural features. While there remains a persistent belief that similarities in outcomes of indices is contingent on their technical definitions, a growing body of research shows that structural features affect observed similarities more than technicalities. \n\n\n\n\n\nJul 1, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRtoot: Collecting and Analyzing Mastodon Data\n\n\nDavid Schoch and Chung-hong Chan\n\n\nAn implementation of calls designed to collect and organize Mastodon data via its Application Program Interfaces (API)\n\n\n\n\n\nMay 31, 2023\n\n\n\n\n\n\n\n\n\n\n\n\ngraphlayouts: Layout algorithms for network visualizations in R\n\n\nDavid Schoch\n\n\nThe package graphlayouts implements several state-of-the-art algorithms which are so far not available for R. This includes algorithms for large graphs, to emphasize hidden group structures, and important nodes within a network. \n\n\n\n\n\nApr 29, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nRANG: Reconstructing reproducible R computational environments\n\n\nChung-hong Chan and David Schoch\n\n\nA complete declarative description of the computational environment is often missing when researchers share their materials. Without such description, software obsolescence and missing system components can jeopardize computational reproducibility in the future, even when data and computer code are available. The R package rang is a complete solution for generating the declarative description \n\n\n\n\n\nMar 8, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nsignnet: An R package for analyzing signed networks\n\n\nDavid Schoch\n\n\nA signed network is a network where both, positive and negative relationships may occur. Common network analytic tools are not applicable to such networks without adapting for the existence of negative ties. The R package signnet brings together methods that have been developed to analyze signed networks \n\n\n\n\n\nJan 27, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nnetrankr: An R package for total, partial, and probabilistic rankings in networks\n\n\nDavid Schoch\n\n\nOne of the key concepts in network science is network centrality. Centrality seeks to provide the answer to the question of who (or what) is important in a network depending on the underlying process forming the network and the empirical phenomenon in question…. \n\n\n\n\n\nSep 26, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nAn extended family of measures for directed networks\n\n\nMartin Everett & David Schoch\n\n\nCentrality indices such as β-centrality, Katz status, and Hubbell’s index are commonly generalized to directed networks by relating the in-centrality of nodes to the in-centrality of their in-neighbors and equivalently so for out-centrality. This paper proposes an extension of Bonacich’s β-centrality…\n\n\n\n\n\nMar 27, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nCoordination patterns reveal online political astroturfing across the world\n\n\nDavid Schoch, Franziska B Keller, Sebastian Stier & JungHwan Yang\n\n\nOnline political astroturfing—hidden information campaigns in which a political actor mimics genuine citizen behavior by incentivizing agents to spread information online—has become prevalent on social media. Such inauthentic information campaigns threaten to undermine the Internet’s promise to more equitable participation in public debates. We argue that the logic of social behavior within the campaign bureaucracy and principal–agent problems lead to detectable activity patterns among the campaign’s social media accounts…\n\n\n\n\n\nMar 17, 2022\n\n\n\n\n\n\n\n\n\n\n\n\nMultiplexity analysis of networks using multigraph representations\n\n\nTermeh Shafie & David Schoch\n\n\nMultivariate networks comprising several compositional and structural variables can be represented as multigraphs by various forms of aggregations based on vertex attributes. We propose a framework to perform exploratory and confirmatory multiplexity analysis of aggregated multigraphs in order to find relevant associations between vertex and edge attributes…\n\n\n\n\n\nSep 30, 2021\n\n\n\n\n\n\n\n\n\n\n\n\nLegislators’ roll-call voting behavior increasingly corresponds to intervals in the political spectrum\n\n\nDavid Schoch & Ulrik Brandes\n\n\nScaling techniques such as the well known NOMINATE position political actors in a low dimensional space to represent the similarity or dissimilarity of their political orientation based on roll-call voting patterns. Starting from the same kind of data we propose an alternative, discrete, representation that replaces positions (points and distances) with niches (boxes and overlap)…\n\n\n\n\n\nOct 15, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nProjecting Signed Two-Mode Networks\n\n\nDavid Schoch\n\n\nSigned two-mode networks have so far predominantly been analysed using blockmodeling techniques. In this work, we put forward the idea of projecting such networks onto its modes. Two projection methods are introduced which allow the application of known dichotomization tool for weighted networks to obtain a simple signed network…\n\n\n\n\n\nJan 10, 2020\n\n\n\n\n\n\n\n\n\n\n\n\nPolitical Astroturfing around the world\n\n\nFranziska B Keller, David Schoch, Sebastian Stier & JungHwan Yang\n\n\nComparison of 8 disinformation campaigns on twitter\n\n\n\n\n\nAug 26, 2019\n\n\n\n\n\n\n\n\n\n\n\n\nPolitical Astroturfing on Twitter: How to Coordinate a Disinformation Campaign\n\n\nFranziska B Keller, David Schoch, Sebastian Stier & JungHwan Yang\n\n\nPolitical astroturfing, a centrally coordinated disinformation campaign in which participants pretend to be ordinary citizens acting independently, has the potential to influence electoral outcomes and other forms of political behavior. Yet, it is hard to evaluate the scope and effectiveness of political astroturfing without ground truth information, such as the verified identity of its agents and instigators. In this paper, we study the South Korean National Information Service’s (NIS) disinformation campaign during the presidential election in 2012…\n\n\n\n\n\nJul 28, 2019\n\n\n\n\n\n\n\n\n\n\n\n\nWhat do centrality measures measure in psychological networks?\n\n\nLaura F Bringmann, Timon Elmer, Sacha Epskamp, Robert W Krause, David Schoch, Marieke Wichers, Johanna TW Wigman & Eveline Snippe\n\n\nCentrality indices are a popular tool to analyze structural aspects of psychological networks. As centrality indices were originally developed in the context of social networks, it is unclear to what extent these indices are suitable in a psychological network context. In this article we critically examine several issues with the use of the most popular centrality indices in psychological networks…\n\n\n\n\n\nJul 27, 2019\n\n\n\n\n\n\n\n\n\n\n\n\nSocial Stratification from Networks of Leveling Ties\n\n\nDavid Schoch & Ulrik Brandes\n\n\nSocial networks can be made of various kinds of ties, but (often implicit) assumptions embodied in network-analytic tools do not necessarily apply to all of them. Centrality indices, or instance, build on the assumption that it is always beneficial to add more ties. While it has been noted that networks of ties with a negative sentiment require different concepts of centrality…\n\n\n\n\n\nDec 14, 2018\n\n\n\n\n\n\n\n\n\n\n\n\nCentrality without indices: Partial rankings and rank probabilities in networks\n\n\nDavid Schoch\n\n\nWe present an alternative approach to assess centrality in networks which does not rely on traditional indices. The work is based on neighborhood-inclusion, a partial ranking inducing relation of nodes, which was shown to be preserved by many existing centrality indices. As such, it can serve as the shared basis for centrality in networks…\n\n\n\n\n\nJan 3, 2018\n\n\n\n\n\n\n\n\n\n\n\n\nHypergraph Representations: A Study of Carib Attacks on Colonial Forces, 1509-1700\n\n\nTermeh Shafie, David Schoch Jimmy Mans, Corinne Hofman & Ulrik Brandes\n\n\nNetwork data consisting of recorded historical events can be represented as hypergraphs where the ties or events can connect any number of nodes or event related attributes. In this paper, we perform a centrality analysis of a directed hypergraph representing attacks by indigenous peoples from the Lesser Antilles on European colonial settlements, 1509–1700…\n\n\n\n\n\nNov 1, 2017\n\n\n\n\n\n\n\n\n\n\n\n\nCorrelations among centrality indices and a class of uniquely ranked graphs\n\n\nDavid Schoch, Thomas Valente & Ulrik Brandes\n\n\nVarious centrality indices have been proposed to capture different aspects of structural importance but relations among them are largely unexplained. The most common strategy appears to be the pairwise comparison of centrality indices via correlation. While correlation between centralities is often read as an inherent property of the indices, we argue that it is confounded by network structure in a systematic way…\n\n\n\n\n\nJul 15, 2017\n\n\n\n\n\n\n\n\n\n\n\n\nHow to Manipulate Social Media: Analyzing Political Astroturfing Using Ground Truth Data from South Korea\n\n\nFranziska B Keller, David Schoch, Sebastian Stier & JungHwan Yang\n\n\nThis project investigates political astroturfing, i.e. hidden propaganda by powerful political actors aimed at mimicking grassroots activity, on social media. We focus on Twitter accounts used by the South Korean secret service to influence the 2012 presidential elections in favor of the eventual winner, Park Geun-hye…\n\n\n\n\n\nMay 3, 2017\n\n\n\n\n\n\n\n\n\n\n\n\nRe-conceptualizing centrality in social networks\n\n\nDavid Schoch & Ulrik Brandes\n\n\nIn the social sciences, networks are used to represent relationships between social actors, be they individuals or aggregates. The structural importance of these actors is assessed in terms of centrality indices which are commonly defined as graph invariants. Many such indices have been proposed, but there is no unifying theory of centrality. Previous attempts at axiomatic characterization have been focused on particular indices, and the conceptual frameworks that have been proposed alternatively do not lend themselves to mathematical treatment…\n\n\n\n\n\nDec 15, 2016\n\n\n\n\n\n\n\n\n\n\n\n\nCentrality as a Predictor of Lethal Proteins: Performance and Robustness\n\n\nDavid Schoch & Ulrik Brandes\n\n\nThe Centrality-Lethality Hypothesis states that proteins with a higher degree centrality are more likely to be lethal, i.e. proteins involved in more interactions are more likely to cause death when knocked off. This proposition gave rise to several new investigations in which stronger associations were obtained for other centrality measures. Most of this previous work focused on the well known protein-interaction network of Saccharomyces cerevisiae…\n\n\n\n\n\nDec 29, 2014\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "publications/hypergraph_carib_attacks/index.html",
    "href": "publications/hypergraph_carib_attacks/index.html",
    "title": "Hypergraph Representations: A Study of Carib Attacks on Colonial Forces, 1509-1700",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/hypergraph_carib_attacks/index.html#abstract",
    "href": "publications/hypergraph_carib_attacks/index.html#abstract",
    "title": "Hypergraph Representations: A Study of Carib Attacks on Colonial Forces, 1509-1700",
    "section": "Abstract",
    "text": "Abstract\nNetwork data consisting of recorded historical events can be represented as hypergraphs where the ties or events can connect any number of nodes or event related attributes. In this paper, we perform a centrality analysis of a directed hypergraph representing attacks by indigenous peoples from the Lesser Antilles on European colonial settlements, 1509–1700. The results of central attacks with respect to attacked colonial force, member of attack alliances, and year and location of attack are discussed and compared to a non-relational exploratory analysis of the data. This comparison points to the importance of a mixed methods approach to enhance the analysis and to obtain a complementary understanding of a network study.\nJournal of Historical Network Research, 1(1)"
  },
  {
    "objectID": "publications/dissimilarity_centrality/index.html",
    "href": "publications/dissimilarity_centrality/index.html",
    "title": "The interplay of structural features and observed dissimilarities among centrality indices",
    "section": "",
    "text": "open access"
  },
  {
    "objectID": "publications/dissimilarity_centrality/index.html#abstract",
    "href": "publications/dissimilarity_centrality/index.html#abstract",
    "title": "The interplay of structural features and observed dissimilarities among centrality indices",
    "section": "Abstract",
    "text": "Abstract\nAn abundance of centrality indices has been proposed which capture the importance of nodes in a network based on different structural features. While there remains a persistent belief that similarities in outcomes of indices is contingent on their technical definitions, a growing body of research shows that structural features affect observed similarities more than technicalities. We conduct a series of experiments on artificial networks to trace the influence of specific structural features on the similarity of indices which confirm previous results in the literature. Our analysis on 1163 real-world networks, however, shows that little of the observations on synthetic networks convincingly carry over to empirical settings. Our findings suggest that although it seems clear that (dis)similarities among centralities depend on structural properties of the network, using correlation type analyses do not seem to be a promising approach to uncover such connections.\nSocial Networks 78:54-64"
  },
  {
    "objectID": "publications/mmc_rtoot/index.html",
    "href": "publications/mmc_rtoot/index.html",
    "title": "Rtoot: Collecting and Analyzing Mastodon Data",
    "section": "",
    "text": "R package"
  },
  {
    "objectID": "publications/mmc_rtoot/index.html#abstract",
    "href": "publications/mmc_rtoot/index.html#abstract",
    "title": "Rtoot: Collecting and Analyzing Mastodon Data",
    "section": "Abstract",
    "text": "Abstract\nMastodon is a free and open source software which allows to run a self-hosted microblogging service, similar to Twitter. Servers running Mastodon can interoperate, meaning that their users can communicate across different instances. Together, all Mastodon instances form a large decentralized federation of social networking sites. Mastodon was first released in late 2016 but has not attracted as much attention by users and researchers compared to centralized social media platforms such as Twitter. Previous studies on Mastodon classify it as an “alternative social media” platform, in contrast to “corporate social media” platforms such as Twitter. Due to the open source nature, Mastodon is also famous for being the technology behind far-right social media platforms Gab and Donald Trump’s Truth Social. These far-right platforms have also captured certain academic attention…\nMobile Media & Communication"
  },
  {
    "objectID": "publications/multiplexity_multigraph/index.html",
    "href": "publications/multiplexity_multigraph/index.html",
    "title": "Multiplexity analysis of networks using multigraph representations",
    "section": "",
    "text": "oa journal"
  },
  {
    "objectID": "publications/multiplexity_multigraph/index.html#abstract",
    "href": "publications/multiplexity_multigraph/index.html#abstract",
    "title": "Multiplexity analysis of networks using multigraph representations",
    "section": "Abstract",
    "text": "Abstract\nMultivariate networks comprising several compositional and structural variables can be represented as multigraphs by various forms of aggregations based on vertex attributes. We propose a framework to perform exploratory and confirmatory multiplexity analysis of aggregated multigraphs in order to find relevant associations between vertex and edge attributes. The exploration is performed by comparing frequencies of the different edges within and between aggregated vertex categories, while the confirmatory analysis is performed using derived complexity or multiplexity statistics under different random multigraph models. These statistics are defined by the distribution of edge multiplicities and provide information on the covariation and dependencies of different edges given vertex attributes. The presented approach highlights the need to further analyse and model structural dependencies with respect to edge entrainment. We illustrate the approach by applying it on a well known multivariate network dataset which has previously been analysed in the context of multiplexity."
  },
  {
    "objectID": "publications/css_reproducibility/index.html",
    "href": "publications/css_reproducibility/index.html",
    "title": "Computational Reproducibility in Computational Social Science",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/css_reproducibility/index.html#abstract",
    "href": "publications/css_reproducibility/index.html#abstract",
    "title": "Computational Reproducibility in Computational Social Science",
    "section": "Abstract",
    "text": "Abstract\nIn the last decade, replication and reproducibility crises have shaken the scientific landscape. As potential solutions, open science practices were heavily discussed and have been implemented with varying success in different disciplines. We argue, however, that the binary definition of reproducibility, specifically for computational-X disciplines such as computational social science, is insufficient since it is not explicit about the agents and conditions under which results can be reproduced. We expand the definition to avoid “open washing”, the practice of fabricating theoretical reproducibility but not supporting practical or verified reproducibility, and introduce a tier system of computational reproducibility based on the concept of verifiability. We identify common barriers to verifiable computational reproducibility, specifically in the field of computational social science, and provide suggestions on how to circumvent common access and computational barriers.\nArxiv 2307.01918"
  },
  {
    "objectID": "publications/centrality_correlation/index.html",
    "href": "publications/centrality_correlation/index.html",
    "title": "Correlations among centrality indices and a class of uniquely ranked graphs",
    "section": "",
    "text": "journal"
  },
  {
    "objectID": "publications/centrality_correlation/index.html#abstract",
    "href": "publications/centrality_correlation/index.html#abstract",
    "title": "Correlations among centrality indices and a class of uniquely ranked graphs",
    "section": "Abstract",
    "text": "Abstract\nVarious centrality indices have been proposed to capture different aspects of structural importance but relations among them are largely unexplained. The most common strategy appears to be the pairwise comparison of centrality indices via correlation. While correlation between centralities is often read as an inherent property of the indices, we argue that it is confounded by network structure in a systematic way. In fact, correlations may be even more indicative of network structure than of relationships between indices. This has substantial implications for the interpretation of centrality effects as it implies that competing explanations embodied in different indices cannot be separated from each other if the network structure is close to a certain generalization of star graphs.\nSocial Networks, 50:46-54"
  },
  {
    "objectID": "publications/astroturfing_around_the_world/index.html",
    "href": "publications/astroturfing_around_the_world/index.html",
    "title": "Political Astroturfing around the world",
    "section": "",
    "text": "poster"
  },
  {
    "objectID": "publications/astroturfing_around_the_world/index.html#abstract",
    "href": "publications/astroturfing_around_the_world/index.html#abstract",
    "title": "Political Astroturfing around the world",
    "section": "Abstract",
    "text": "Abstract\nComparison of 8 disinformation campaigns on twitter\nAPSA 2019 (poster)"
  },
  {
    "objectID": "publications/joss_signnet/index.html",
    "href": "publications/joss_signnet/index.html",
    "title": "signnet: An R package for analyzing signed networks",
    "section": "",
    "text": "R package"
  },
  {
    "objectID": "publications/joss_signnet/index.html#abstract",
    "href": "publications/joss_signnet/index.html#abstract",
    "title": "signnet: An R package for analyzing signed networks",
    "section": "Abstract",
    "text": "Abstract\nNetwork analysis usually deals with relations among entities which are positive, such as friendship, or advice seeking. Most analytic tools are constructed with this assumption, be that centrality indices, or clustering tools. However, not all conceivable relationships are positive. People can be friends but also enemies. A signed network is a network where both, positive and negative relationships may occur. Common network analytic tools are not applicable to such networks without adapting for the existence of negative ties. The R package signnet brings together methods that have been developed to analyze signed networks. This includes known blockmodeling techniques, centrality indices and tools for two-mode networks, as well as unique analytic techniques surrounding structural balance theory.\nJournal of Open Source Software 8 (81), 4987"
  },
  {
    "objectID": "publications/arxiv_rang/index.html",
    "href": "publications/arxiv_rang/index.html",
    "title": "RANG: Reconstructing reproducible R computational environments",
    "section": "",
    "text": "R package"
  },
  {
    "objectID": "publications/arxiv_rang/index.html#abstract",
    "href": "publications/arxiv_rang/index.html#abstract",
    "title": "RANG: Reconstructing reproducible R computational environments",
    "section": "Abstract",
    "text": "Abstract\nA complete declarative description of the computational environment is often missing when researchers share their materials. Without such description, software obsolescence and missing system components can jeopardize computational reproducibility in the future, even when data and computer code are available. The R package rang is a complete solution for generating the declarative description for other researchers to automatically reconstruct the computational environment at a specific time point. The reconstruction process, based on Docker, has been tested for R code as old as 2001. The declarative description generated by rang satisfies the definition of a reproducible research compendium and can be shared as such. In this contribution, we show how rang can be used to make otherwise unexecutable code, spanning from fields such as computational social science and bioinformatics, executable again. We also provide instructions on how to use rang to construct reproducible and shareable research compendia of current research. The package is currently available from CRAN (this https URL) and GitHub (this https URL).\nArxiv 2303.04758"
  },
  {
    "objectID": "project/roughnet/index.html",
    "href": "project/roughnet/index.html",
    "title": "roughnet",
    "section": "",
    "text": "GITHUB\n\n\nPKGDOWN"
  },
  {
    "objectID": "project/stabilityAI/index.html",
    "href": "project/stabilityAI/index.html",
    "title": "stabilityAI",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quarto_nutshell/index.html",
    "href": "project/quarto_nutshell/index.html",
    "title": "Nutshell: Expandable Explanations",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/snahelper/index.html",
    "href": "project/snahelper/index.html",
    "title": "snahelper",
    "section": "",
    "text": "GITHUB\n\n\nPKGDOWN"
  },
  {
    "objectID": "project/index.html",
    "href": "project/index.html",
    "title": "Projects",
    "section": "",
    "text": "R packages\n\n\n\n\n\n\n\n\n\n\ngraphlayouts\n\n\nThe package implements several new layout algorithms to visualize networks which are not provided by standard graph packages. Most are based on the concept of stress majorization. Some more specific algorithms allow to emphasize hidden group structures in networks, focus on specific nodes or specific types of networks.\n\n\n\n\n\n\n\n\n\n\n\n\n\nnetrankr\n\n\nImplements methods for centrality related analyses of networks. While the package includes the possibility to build more than 20 indices, its main focus lies on index-free assessment of centrality via partial rankings obtained by neighborhood-inclusion or positional dominance. These partial rankings can be analyzed with different methods, including probabilistic methods like computing expected node ranks and relative rank probabilitie.\n\n\n\n\n\n\n\n\n\n\n\n\n\nnetworkdata\n\n\nThe package contains a large collection of network dataset with different context. This includes social networks, animal networks and movie networks. All datasets are in ‘igraph’ format.\n\n\n\n\n\n\n\n\n\n\n\n\n\nsnahelper\n\n\nRStudio addin which provides a GUI to visualize and analyse networks. After finishing a session, the code to produce the plot is inserted in the current script. Alternatively, the function SNAhelperGadget() can be used directly from the console. Additional addins include the Netreader() for reading network files, Netbuilder() to create small networks via point and click, and the Componentlayouter() to layout networks with many components manually.\n\n\n\n\n\n\n\n\n\n\n\n\n\nedgebundle\n\n\nImplements several algorithms for bundling edges in networks and flow and metro map layouts. This includes force directed edge bundling, a flow algorithm based on Steiner trees and a multicriteria optimization method for metro map layouts.\n\n\n\n\n\n\n\n\n\n\n\n\n\nsignnet\n\n\nImplements methods for the analysis of signed networks. This includes several measures for structural balance, blockmodeling algorithms, various centrality indices, and projections of signed two-mode networks.\n\n\n\n\n\n\n\n\n\n\n\n\n\nrtoot\n\n\nAn implementation of calls designed to collect and organize Mastodon data via its Application Program Interfaces (API), which can be found at the following URL: https://docs.joinmastodon.org/.\n\n\n\n\n\n\n\n\n\n\n\n\n\nrgraph6\n\n\nThis package implements several methods to encode networks as Encode network data as strings of printable ASCII characters.\n\n\n\n\n\n\n\n\n\n\n\n\n\nroughnet\n\n\nVisualize networks using the javascript library roughjs. This allows to draw sketchy, hand-drawn-like networks.\n\n\n\n\n\n\n\n\n\n\n\n\n\nPSAWR\n\n\nPushshift.io API Wrapper written in R for comment/submission search for Reddit.\n\n\n\n\n\n\n\n\n\n\n\n\n\nroughsf\n\n\nDraw maps using the javascript library roughjs. This allows to draw sketchy, hand-drawn-like maps.\n\n\n\n\n\n\n\n\n\n\n\n\n\nadaR\n\n\nwrapper for ada-url a WHATWG-compliant and fast URL parser written in modern C++\n\n\n\n\n\n\n\n\n\n\n\n\n\nnetUtils\n\n\nProvides a collection of network analytic (convenience) functions, missing in other standard packages. This includes forms of dyad and triad census with attributes and equivalence measures. All functions are build upon igraph\n\n\n\n\n\n\n\n\n\n\n\n\n\nRtumblr\n\n\nAn implementation of calls designed to collect Tumblr data via its Application Program Interfaces (API)\n\n\n\n\n\n\n\n\n\n\n\n\n\nwebBotparseR\n\n\nParse search engine results which have been scraped with the ‘WebBot’ browser extension\n\n\n\n\n\n\n\n\n\n\n\n\n\nwebtrackR\n\n\nImplements data structures and methods to work with web tracking data\n\n\n\n\n\n\n\n\n\n\n\n\n\nstabilityAI\n\n\nInteract with the API of stability.ai\n\n\n\n\n\n\n\n\n\n\n\n\n\ntimeless\n\n\nFast general purpose date time converter\n\n\n\n\n\n\n\n\n\n\n\n\n\ndialrs\n\n\nParsing phone numbers in different formats\n\n\n\n\n\n\n\n\n\n\n\n\n\nrokemon\n\n\nThis package implements several themes for ggplot to bring your data into the world of Pokemon.\n\n\n\n\n\n\n\n\n\n\n\n\n\nlevelnet\n\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n  \n\n\n\n\nQuarto material\n\n\n    \n      \n      \n    \n\n\n\n\n\nTitle\n\n\nDescription\n\n\ntype\n\n\n\n\n\n\nPersonal website\n\n\nMy personal webpage made with Quarto\n\n\nwebsite\n\n\n\n\nQuarto Academicons\n\n\nShortcodes to use academicons in quarto\n\n\nshortcodes\n\n\n\n\nBlackboard revealjs theme\n\n\nA blackboard styled theme for revealjs\n\n\nrevealjs\n\n\n\n\nSketchy HTML theme\n\n\nA sketchy theme for html documents\n\n\nhtml\n\n\n\n\nShare buttons for HTML documents\n\n\nQuarto extension to add share buttons\n\n\nfilter\n\n\n\n\nNutshell: Expandable Explanations\n\n\nInclude expandable explanations in documents\n\n\nfilter\n\n\n\n\nQuartocities\n\n\nGeocities template for websites\n\n\nwebsite\n\n\n\n\nGlossary with nutshell\n\n\nAutomatic glossary for webpages using nutshell\n\n\ncode\n\n\n\n\nCV templates\n\n\nCV/Resume templates for Quarto\n\n\nhtml\n\n\n\n\n\nNo matching items\n\n\n\n\nOthers\n\n\n    \n      \n      \n    \n\n\n\n\n\n\n\nTitle\n\n\nDescription\n\n\n\n\n\n\n\n\n\nsoccerverse\n\n\nAnalyzing top tier soccer around the globe\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "project/rtoot/index.html",
    "href": "project/rtoot/index.html",
    "title": "rtoot",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quarto_blackboard/index.html",
    "href": "project/quarto_blackboard/index.html",
    "title": "Blackboard revealjs theme",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/Rtumblr/index.html",
    "href": "project/Rtumblr/index.html",
    "title": "Rtumblr",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/netrankr/index.html",
    "href": "project/netrankr/index.html",
    "title": "netrankr",
    "section": "",
    "text": "GITHUB\n\n\nPKGDOWN"
  },
  {
    "objectID": "project/timeless/index.html",
    "href": "project/timeless/index.html",
    "title": "timeless",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/graphlayouts/index.html",
    "href": "project/graphlayouts/index.html",
    "title": "graphlayouts",
    "section": "",
    "text": "GITHUB\n\n\nPKGDOWN"
  },
  {
    "objectID": "project/quarto_webpage/index.html",
    "href": "project/quarto_webpage/index.html",
    "title": "Personal website",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/edgebundle/index.html",
    "href": "project/edgebundle/index.html",
    "title": "edgebundle",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/roughsf/index.html",
    "href": "project/roughsf/index.html",
    "title": "roughsf",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quarto_sketchy/index.html",
    "href": "project/quarto_sketchy/index.html",
    "title": "Sketchy HTML theme",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/rokemon/index.html",
    "href": "project/rokemon/index.html",
    "title": "rokemon",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "about/index.html",
    "href": "about/index.html",
    "title": "schochastics",
    "section": "",
    "text": "👋 Hi, I’m David Schoch"
  },
  {
    "objectID": "about/index.html#more-about-me",
    "href": "about/index.html#more-about-me",
    "title": "schochastics",
    "section": "more about me",
    "text": "more about me\nBefore joining GESIS, I was a Presidential Fellow at the University of Manchester in the Department of Sociology, affiliated with the The Mitchell Centre for Social Network Analysis.\nI received my PhD in Computer Science at the University of Konstanz as a fellow of the Graduate School of Decision Sciences. I also have a diploma in business mathematics from Karlsruhe Institute of Technology."
  },
  {
    "objectID": "about/index.html#research-interests",
    "href": "about/index.html#research-interests",
    "title": "schochastics",
    "section": "research interests",
    "text": "research interests\nMy main research interests lie in the field of (social) network analysis. I have made technical and methodological contributions to topics such as network centrality, signed networks, and two-mode networks.\nI am also actively involved in research around political astroturfing on social media.\nSee my publications for all my scientific output."
  },
  {
    "objectID": "about/index.html#soccerverse",
    "href": "about/index.html#soccerverse",
    "title": "schochastics",
    "section": "soccerverse",
    "text": "soccerverse\nIn an effort to combine a hobby with work, I created the football analytics website soccerverse together with some former colleagues. The project includes a world ranking of football clubs, close to the one FIFA uses for national teams. I developed most of my data science and R skills with this project, including scraping and cleaning data (i.e. collecting football results from various sources) and using the tidyverse to analyse the data.\nPart of the data is available on github."
  },
  {
    "objectID": "about/index.html#science-slam",
    "href": "about/index.html#science-slam",
    "title": "schochastics",
    "section": "science slam",
    "text": "science slam\nI am a semi-active Science slammer, mostly slamming about networks and disinformation on social media. Some of my slams can be found on youtube (all in german)."
  },
  {
    "objectID": "project/signnet/index.html",
    "href": "project/signnet/index.html",
    "title": "signnet",
    "section": "",
    "text": "GITHUB\n\n\nPKGDOWN"
  },
  {
    "objectID": "project/webtrackR/index.html",
    "href": "project/webtrackR/index.html",
    "title": "webtrackR",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quarto_academicons/index.html",
    "href": "project/quarto_academicons/index.html",
    "title": "Quarto Academicons",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/webBotparseR/index.html",
    "href": "project/webBotparseR/index.html",
    "title": "webBotparseR",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/networkdata/index.html",
    "href": "project/networkdata/index.html",
    "title": "networkdata",
    "section": "",
    "text": "GITHUB\n\n\nPKGDOWN"
  },
  {
    "objectID": "project/levelnet/index.html",
    "href": "project/levelnet/index.html",
    "title": "levelnet",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quarto_social-share/index.html",
    "href": "project/quarto_social-share/index.html",
    "title": "Share buttons for HTML documents",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/adaR/index.html",
    "href": "project/adaR/index.html",
    "title": "adaR",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quarto_glossary/index.html",
    "href": "project/quarto_glossary/index.html",
    "title": "Glossary with nutshell",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/soccerverse/index.html",
    "href": "project/soccerverse/index.html",
    "title": "soccerverse",
    "section": "",
    "text": "LINK"
  },
  {
    "objectID": "project/quarto_cv/index.html",
    "href": "project/quarto_cv/index.html",
    "title": "CV templates",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/PSAWR/index.html",
    "href": "project/PSAWR/index.html",
    "title": "PSAWR",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/quartocities/index.html",
    "href": "project/quartocities/index.html",
    "title": "Quartocities",
    "section": "",
    "text": "GITHUB\n\n\nDEMO"
  },
  {
    "objectID": "project/rgraph6/index.html",
    "href": "project/rgraph6/index.html",
    "title": "rgraph6",
    "section": "",
    "text": "GITHUB\n\n(Main Author and maintainer: Michal Bojanowski)"
  },
  {
    "objectID": "project/netUtils/index.html",
    "href": "project/netUtils/index.html",
    "title": "netUtils",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "project/dialrs/index.html",
    "href": "project/dialrs/index.html",
    "title": "dialrs",
    "section": "",
    "text": "GITHUB"
  },
  {
    "objectID": "publications/prob_central/index.html",
    "href": "publications/prob_central/index.html",
    "title": "Centrality without indices: Partial rankings and rank probabilities in networks",
    "section": "",
    "text": "journal"
  },
  {
    "objectID": "publications/prob_central/index.html#abstract",
    "href": "publications/prob_central/index.html#abstract",
    "title": "Centrality without indices: Partial rankings and rank probabilities in networks",
    "section": "Abstract",
    "text": "Abstract\nWe present an alternative approach to assess centrality in networks which does not rely on traditional indices. The work is based on neighborhood-inclusion, a partial ranking inducing relation of nodes, which was shown to be preserved by many existing centrality indices. As such, it can serve as the shared basis for centrality in networks. We argue that evaluating this partial ranking by itself allows for a generic assessment of centrality, avoiding several pitfalls that can arise when indices are applied. Additionally, we illustrate how to derive further partial rankings and introduce some probabilistic methods to, among others, compute expected centrality ranks of nodes.\nSocial Networks, 54:50-60"
  },
  {
    "objectID": "publications/reconceptualizing_centrality/index.html",
    "href": "publications/reconceptualizing_centrality/index.html",
    "title": "Re-conceptualizing centrality in social networks",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/reconceptualizing_centrality/index.html#abstract",
    "href": "publications/reconceptualizing_centrality/index.html#abstract",
    "title": "Re-conceptualizing centrality in social networks",
    "section": "Abstract",
    "text": "Abstract\nIn the social sciences, networks are used to represent relationships between social actors, be they individuals or aggregates. The structural importance of these actors is assessed in terms of centrality indices which are commonly defined as graph invariants. Many such indices have been proposed, but there is no unifying theory of centrality. Previous attempts at axiomatic characterization have been focused on particular indices, and the conceptual frameworks that have been proposed alternatively do not lend themselves to mathematical treatment. We show that standard centrality indices, although seemingly distinct, can in fact be expressed in a common framework based on path algebras. Since, as a consequence, all of these indices preserve the neighbourhood-inclusion pre-order, the latter provides a conceptually clear criterion for the definition of centrality indices.\nEuropean Journal of Applied Mathematics, 27(6):971-985"
  },
  {
    "objectID": "publications/proj_signed2mode/index.html",
    "href": "publications/proj_signed2mode/index.html",
    "title": "Projecting Signed Two-Mode Networks",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/proj_signed2mode/index.html#abstract",
    "href": "publications/proj_signed2mode/index.html#abstract",
    "title": "Projecting Signed Two-Mode Networks",
    "section": "Abstract",
    "text": "Abstract\nSigned two-mode networks have so far predominantly been analysed using blockmodeling techniques. In this work, we put forward the idea of projecting such networks onto its modes. Two projection methods are introduced which allow the application of known dichotomization tool for weighted networks to obtain a simple signed network. It turns out, however, that resulting networks may contain ambivalent ties, defined as conjunctions of positive and negative ties. We show that this requires the reformulation of matrices related to the network and introduce the complex adjacency and Laplacian matrix. These matrices are used to prove some properties related to balance theory including ambivalence.\nMathematical Sociology 45 (1), 37-50"
  },
  {
    "objectID": "publications/penalty_shootout/index.html",
    "href": "publications/penalty_shootout/index.html",
    "title": "Penalty shootouts are tough, but the alternating order is fair",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/penalty_shootout/index.html#abstract",
    "href": "publications/penalty_shootout/index.html#abstract",
    "title": "Penalty shootouts are tough, but the alternating order is fair",
    "section": "Abstract",
    "text": "Abstract\nWe compare conversion rates of association football (soccer) penalties during regulation or extra time with those during shootouts. Our data consists of roughly 50,000 penalties from the eleven~most recent seasons in European men’s football competitions. About one third of the penalties are from more than 1,500 penalty shootouts. We find that shootout conversion rates are significantly lower, and attribute this to worse performance of shooters rather than better performance of goalkeepers. We also find that, statistically, there is no advantage for either team in the usual alternating shooting order. These main findings are complemented by a number of more detailed analyses.\nArxiv 2310.04797"
  },
  {
    "objectID": "publications/joss_netrankr/index.html",
    "href": "publications/joss_netrankr/index.html",
    "title": "netrankr: An R package for total, partial, and probabilistic rankings in networks",
    "section": "",
    "text": "R package"
  },
  {
    "objectID": "publications/joss_netrankr/index.html#abstract",
    "href": "publications/joss_netrankr/index.html#abstract",
    "title": "netrankr: An R package for total, partial, and probabilistic rankings in networks",
    "section": "Abstract",
    "text": "Abstract\nOne of the key concepts in network science is network centrality. Centrality seeks to provide the answer to the question of who (or what) is important in a network depending on the underlying process forming the network and the empirical phenomenon in question. In a nutshell, an actor in a network is more central if they have better relations, where the definition of better relations depends on the conceptualization of structural importance. Applications of centrality can be found in any field where networks arise. In social networks, we may simply be interested in finding the most popular user. In bioinformatics, centrality is used to detect essential proteins in protein-protein interaction networks (Jeong et al., 2001). Even in sports, centrality is applied to rank athletes or teams (Radicchi, 2011). A myriad of indices have been proposed, all with differing interpretations of what constitutes a central position within a network. Although netrankr offers this traditional approach to network centrality, its main focus lies on alternative assessments of centrality based on partial and probabilistic rankings in networks.\nJournal of Open Source Software 7 (77), 4563"
  },
  {
    "objectID": "publications/joss_graphlayouts/index.html",
    "href": "publications/joss_graphlayouts/index.html",
    "title": "graphlayouts: Layout algorithms for network visualizations in R",
    "section": "",
    "text": "R package"
  },
  {
    "objectID": "publications/joss_graphlayouts/index.html#abstract",
    "href": "publications/joss_graphlayouts/index.html#abstract",
    "title": "graphlayouts: Layout algorithms for network visualizations in R",
    "section": "Abstract",
    "text": "Abstract\nNetwork analysis offers a powerful set of methods to understand the relationships among entities, such as people, or organizations, and the patterns that emerge from these connections. It is increasingly popular in various fields, including sociology, biology, economics, and computer science, and has been used to study diverse phenomena including the spread of diseases, flow of information, and the structure of political organizations. Network visualization is a powerful tool for exploring, analyzing, and communicating network structures and patterns therein. However, in contrast to tabular data, nodes can technically be placed arbitrarily on the plane and it is easy to draw wrong conclusion based on an inadequate layout. To circumvent arbitrary placement of nodes, many different layout algorithms have been developed which optimize different stylistic features and can serve purposes in communicating structural properties. The package graphlayouts implements several state-of-the-art algorithms which are so far not available for R. This includes algorithms for large graphs, to emphasize hidden group structures, and important nodes within a network.\nJournal of Open Source Software 8 (84), 5238"
  },
  {
    "objectID": "publications/centrality_lethality/index.html",
    "href": "publications/centrality_lethality/index.html",
    "title": "Centrality as a Predictor of Lethal Proteins: Performance and Robustness",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/centrality_lethality/index.html#abstract",
    "href": "publications/centrality_lethality/index.html#abstract",
    "title": "Centrality as a Predictor of Lethal Proteins: Performance and Robustness",
    "section": "Abstract",
    "text": "Abstract\nThe Centrality-Lethality Hypothesis states that proteins with a higher degree centrality are more likely to be lethal, i.e. proteins involved in more interactions are more likely to cause death when knocked off. This proposition gave rise to several new investigations in which stronger associations were obtained for other centrality measures. Most of this previous work focused on the well known protein-interaction network of Saccharomyces cerevisiae. In a recent study, however, it was found that degree and betweenness of lethal proteins is significantly above average across 20 different protein-interaction networks. Closeness centrality, on the other hand, did not perform as well. We replicate this study and show that the reported results are due largely to a misapplication of closeness to disconnected networks. A more suitable variant actually turns out to be a better predictor than betweenness and degree in most of the networks. Worse, we find that despite the different theoretical explanations they offer, the performance ranking of centrality indices varies across networks and depends on the somewhat arbitrary derivation of binary network data from unreliable measurements. Our results suggest that the celebrated hypothesis is not supported by data.\nIn MMB & DFT 2014: 11"
  },
  {
    "objectID": "publications/polcomm_astroturfing/index.html",
    "href": "publications/polcomm_astroturfing/index.html",
    "title": "Political Astroturfing on Twitter: How to Coordinate a Disinformation Campaign",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/polcomm_astroturfing/index.html#abstract",
    "href": "publications/polcomm_astroturfing/index.html#abstract",
    "title": "Political Astroturfing on Twitter: How to Coordinate a Disinformation Campaign",
    "section": "Abstract",
    "text": "Abstract\nPolitical astroturfing, a centrally coordinated disinformation campaign in which participants pretend to be ordinary citizens acting independently, has the potential to influence electoral outcomes and other forms of political behavior. Yet, it is hard to evaluate the scope and effectiveness of political astroturfing without ground truth information, such as the verified identity of its agents and instigators. In this paper, we study the South Korean National Information Service’s (NIS) disinformation campaign during the presidential election in 2012, taking advantage of a list of campaign accounts published in court proceedings. Features that best distinguish these accounts from regular users in contemporaneously collected Twitter data are traces left by coordination among astroturfing agents, instead of the individual account characteristics typically used in related approaches such as social bot detection. We develop a methodology that exploits these distinct empirical patterns to identify additional likely astroturfing accounts and validate this detection strategy by analyzing their messages and current account status. However, an analysis relying on Twitter influence metrics shows that the known and suspect NIS accounts only had a limited impact on political social media discussions. By using the principal-agent framework to analyze one of the earliest revealed instances of political astroturfing, we improve on extant methodological approaches to detect disinformation campaigns and ground them more firmly in social science theory.\nPolitical Communication 37 (2), 256-280"
  },
  {
    "objectID": "publications/social_stratification/index.html",
    "href": "publications/social_stratification/index.html",
    "title": "Social Stratification from Networks of Leveling Ties",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/social_stratification/index.html#abstract",
    "href": "publications/social_stratification/index.html#abstract",
    "title": "Social Stratification from Networks of Leveling Ties",
    "section": "Abstract",
    "text": "Abstract\nSocial networks can be made of various kinds of ties, but (often implicit) assumptions embodied in network-analytic tools do not necessarily apply to all of them. Centrality indices, or instance, build on the assumption that it is always beneficial to add more ties. While it has been noted that networks of ties with a negative sentiment require different concepts of centrality, we here highlight ties that are neither positive nor negative to have, but an indication of commonality. This is exemplified by the derivation of socio-economic status from networks that indicate common class membership.\nIn International Conference on Complex Networks and their Applications"
  },
  {
    "objectID": "publications/political_astroturf_korea/index.html",
    "href": "publications/political_astroturf_korea/index.html",
    "title": "How to Manipulate Social Media: Analyzing Political Astroturfing Using Ground Truth Data from South Korea",
    "section": "",
    "text": "journal"
  },
  {
    "objectID": "publications/political_astroturf_korea/index.html#abstract",
    "href": "publications/political_astroturf_korea/index.html#abstract",
    "title": "How to Manipulate Social Media: Analyzing Political Astroturfing Using Ground Truth Data from South Korea",
    "section": "Abstract",
    "text": "Abstract\nThis project investigates political astroturfing, i.e. hidden propaganda by powerful political actors aimed at mimicking grassroots activity, on social media. We focus on Twitter accounts used by the South Korean secret service to influence the 2012 presidential elections in favor of the eventual winner, Park Geun-hye. Two independent cluster analyses based on activity patterns of the Twitter accounts and textual features of tweets reliably reveal that there are three groups of NIS accounts, including one group that engages mostly in retweeting, and another group focused on posting news articles with a link. We show that these groups reflect different strategic agendas and correspond to several secret service agents identified in the court documents. We argue that these patterns of coordinated tweeting are consistent with predictions derived from principal-agent theory, and should therefore appear in other astroturfing campaigns as well.\nIn Eleventh International AAAI Conference on Web and Social Media"
  },
  {
    "objectID": "publications/scirep_astroturfing/index.html",
    "href": "publications/scirep_astroturfing/index.html",
    "title": "Coordination patterns reveal online political astroturfing across the world",
    "section": "",
    "text": "oa journal"
  },
  {
    "objectID": "publications/scirep_astroturfing/index.html#abstract",
    "href": "publications/scirep_astroturfing/index.html#abstract",
    "title": "Coordination patterns reveal online political astroturfing across the world",
    "section": "Abstract",
    "text": "Abstract\nOnline political astroturfing—hidden information campaigns in which a political actor mimics genuine citizen behavior by incentivizing agents to spread information online—has become prevalent on social media. Such inauthentic information campaigns threaten to undermine the Internet’s promise to more equitable participation in public debates. We argue that the logic of social behavior within the campaign bureaucracy and principal–agent problems lead to detectable activity patterns among the campaign’s social media accounts. Our analysis uses a network-based methodology to identify such coordination patterns in all campaigns contained in the largest publicly available database on astroturfing published by Twitter. On average, 74% of the involved accounts in each campaign engaged in a simple form of coordination that we call co-tweeting and co-retweeting. Comparing the astroturfing accounts to various systematically constructed comparison samples, we show that the same behavior is negligible among the accounts of regular users that the campaigns try to mimic. As its main substantive contribution, the paper demonstrates that online political astroturfing consistently leaves similar traces of coordination, even across diverse political and country contexts and different time periods. The presented methodology is a reliable first step for detecting astroturfing campaigns.\nScientific Reports 12, 4572"
  },
  {
    "objectID": "publications/jap_centrality/index.html",
    "href": "publications/jap_centrality/index.html",
    "title": "What do centrality measures measure in psychological networks?",
    "section": "",
    "text": "preprint"
  },
  {
    "objectID": "publications/jap_centrality/index.html#abstract",
    "href": "publications/jap_centrality/index.html#abstract",
    "title": "What do centrality measures measure in psychological networks?",
    "section": "Abstract",
    "text": "Abstract\nCentrality indices are a popular tool to analyze structural aspects of psychological networks. As centrality indices were originally developed in the context of social networks, it is unclear to what extent these indices are suitable in a psychological network context. In this article we critically examine several issues with the use of the most popular centrality indices in psychological networks: degree, betweenness, and closeness centrality. We show that problems with centrality indices discussed in the social network literature also apply to the psychological networks. Assumptions underlying centrality indices, such as presence of a flow and shortest paths, may not correspond with a general theory of how psychological variables relate to one another. Furthermore, the assumptions of node distinctiveness and node exchangeability may not hold in psychological networks. We conclude that, for psychological networks, betweenness and closeness centrality seem especially unsuitable as measures of node importance. We therefore suggest three ways forward: (a) using centrality measures that are tailored to the psychological network context, (b) reconsidering existing measures of importance used in statistical models underlying psychological networks, and (c) discarding the concept of node centrality entirely. Foremost, we argue that one has to make explicit what one means when one states that a node is central, and what assumptions the centrality measure of choice entails, to make sure that there is a match between the process under study and the centrality measure that is used.\nJournal of Abnormal Psychology 128 (8), 892"
  },
  {
    "objectID": "index.html#selected-open-source-material",
    "href": "index.html#selected-open-source-material",
    "title": "schochastics",
    "section": "Selected Open Source Material",
    "text": "Selected Open Source Material\n\n\n\n\n\n\n\n\n\n\nNetwork Visualizations in R\n\n\nusing ggraph and graphlayouts\n\n\nTutorial for Network Visualization in R using ggraph and graphlayouts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBasic Network Analysis in R\n\n\nusing igraph and related packages\n\n\nTutorial for Network Analysis in R\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidy Network Analysis in R\n\n\nusing the tidygraph package\n\n\nNetwork Analysis in R using tidygraph\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\nall open source material"
  },
  {
    "objectID": "index.html#selected-projects",
    "href": "index.html#selected-projects",
    "title": "schochastics",
    "section": "Selected Projects",
    "text": "Selected Projects\n\n\n\n\n\n\n\n\n\n\ngraphlayouts\n\n\nAn R package for network visualization\n\n\nThe package implements several new layout algorithms to visualize networks which are not provided by standard graph packages. Most are based on the concept of stress majorization. Some more specific algorithms allow to emphasize hidden group structures in networks, focus on specific nodes or specific types of networks.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnetrankr\n\n\nAn R package for network centrality\n\n\nImplements methods for centrality related analyses of networks. While the package includes the possibility to build more than 20 indices, its main focus lies on index-free assessment of centrality via partial rankings obtained by neighborhood-inclusion or positional dominance. These partial rankings can be analyzed with different methods, including probabilistic methods like computing expected node ranks and relative rank probabilitie.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsnahelper\n\n\nRstudio addins for network analysis\n\n\nRStudio addin which provides a GUI to visualize and analyse networks. After finishing a session, the code to produce the plot is inserted in the current script. Alternatively, the function SNAhelperGadget() can be used directly from the console. Additional addins include the Netreader() for reading network files, Netbuilder() to create small networks via point and click, and the Componentlayouter() to layout networks with many components manually.\n\n\n\n\n\n\n\n\n\nNo matching items\n\n\n\nall projects"
  },
  {
    "objectID": "index.html#last-publications",
    "href": "index.html#last-publications",
    "title": "schochastics",
    "section": "Last Publications",
    "text": "Last Publications\n\n\n\n\n\n\n\n\n\n\nPenalty shootouts are tough, but the alternating order is fair\n\n\nSilvan Vollmer and David Schoch and Ulrik Brandes\n\n\nWe compare conversion rates of association football (soccer) penalties during regulation or extra time with those during shootouts. Our data consists of roughly 50,000 penalties from the eleven~most recent seasons in European men’s football competitions \n\n\n\n\n\nOct 7, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nComputational Reproducibility in Computational Social Science\n\n\nDavid Schoch and Chung-hong Chan and Claudia Wagner and Arnim Bleier\n\n\nIn the last decade, replication and reproducibility crises have shaken the scientific landscape. As potential solutions, open science practices were heavily discussed and have been implemented with varying success in different disciplines. We argue, however, that the binary definition of reproducibility, specifically for computational-X disciplines such as computational social science, is insufficient since it is not explicit about the agents and conditions under which results can be…\n\n\n\n\n\nJul 4, 2023\n\n\n\n\n\n\n\n\n\n\n\n\nThe interplay of structural features and observed dissimilarities among centrality indices\n\n\nDavid Schoch and Termeh Shafie\n\n\nAn abundance of centrality indices has been proposed which capture the importance of nodes in a network based on different structural features. While there remains a persistent belief that similarities in outcomes of indices is contingent on their technical definitions, a growing body of research shows that structural features affect observed similarities more than technicalities. \n\n\n\n\n\nJul 1, 2023\n\n\n\n\n\n\nNo matching items\n\n\n\nall publications"
  },
  {
    "objectID": "material/30daymapchallenge/index.html",
    "href": "material/30daymapchallenge/index.html",
    "title": "30DayMapchallenge 2021",
    "section": "",
    "text": "Code\n\n\nDay 01 - Points\n\n  \n\n\n\nDay 02 - Lines\n\n  \n\n\n\nDay 03 - Polygons\n\n  \n\n\n\nDay 04 - Hexagons\n\n  \n\n\n\nDay 05 - Data challenge 1: OpenStreetMap\n\n  \n\n\n\nDay 06 - Red\n\n  \n\n\n\nDay 07 - Green\n\n  \n\n\n\nDay 08 - Blue\n\n  \n\n\n\nDay 09 - Monochrome\n\n  \n\n\n\nDay 10 - Raster\n\n  \n\n\n\nDay 11 - 3D\n\n  \n\n\n\nDay 12 - Population\n\n  \n\n\n\nDay 13 - Data challenge 2: Natural Earth\n\n  \n\n\n\nDay 14 - Map with a new tool\n\n  \n\n\n\nDay 15 - Map made without using a computer\n\n  \n\n\n\nDay 16 - Urban/rural\n\n  \n\n\n\nDay 17 - Land\n\n  \n\n\n\nDay 18 - Water\n\n  \n\n\n\nDay 19 - Island(s)\n\n  \n\n\n\nDay 20 - Movement\n\n  \n\n\n\nDay 21 - Elevation\n\n  \n\n\n\nDay 22 - Boundaries\n\n  \n\n\n\nDay 23 - Data challenge 3: GHSL Global Human Settlement Layer\n\n  \n\n\n\nDay 24 - Historical map\n\n  \n\n\n\nDay 26 - Choropleth map\n\n  \n\n\n\nDay 27 - Heatmap\n\n  \n\n\n\nDay 28 - The Earth is not flat\n\n  \n\n\n\nDay 29 - NULL\n\n  \n\n\n\nDay 30 - Metamapping day"
  },
  {
    "objectID": "material/swaig/index.html",
    "href": "material/swaig/index.html",
    "title": "swAIg",
    "section": "",
    "text": "Designs"
  },
  {
    "objectID": "material/tidynetAnaR/index.html",
    "href": "material/tidynetAnaR/index.html",
    "title": "Tidy Network Analysis in R",
    "section": "",
    "text": "(last update 2022-09-26)"
  },
  {
    "objectID": "material/tidynetAnaR/index.html#graph-structures",
    "href": "material/tidynetAnaR/index.html#graph-structures",
    "title": "Tidy Network Analysis in R",
    "section": "Graph structures",
    "text": "Graph structures\nWe’ll use the famous Florentine Family marriage dataset as a running example. The dataset is in igraph format but can be converted to a tbl_graph object with as_tbl_graph().\n\ndata(\"flo_marriage\")\nflo_tidy &lt;- as_tbl_graph(flo_marriage)\nflo_tidy\n\n# A tbl_graph: 16 nodes and 20 edges\n#\n# An undirected simple graph with 2 components\n#\n# Node Data: 16 × 4 (active)\n  name       wealth `#priors` `#ties`\n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 Acciaiuoli     10        53       2\n2 Albizzi        36        65       3\n3 Barbadori      55         0      14\n4 Bischeri       44        12       9\n5 Castellani     20        22      18\n6 Ginori         32         0       9\n# … with 10 more rows\n#\n# Edge Data: 20 × 2\n   from    to\n  &lt;int&gt; &lt;int&gt;\n1     1     9\n2     2     6\n3     2     7\n# … with 17 more rows\n\n\nThis new graph class just subclasses igraph and simply represents the network in a tidy fashion, printing two data frames, one for nodes and one for edges.\n\nclass(flo_tidy)\n\n[1] \"tbl_graph\" \"igraph\"   \n\n\nAny function in R that expects an igraph object as input will also accept a tbl_graph.\nThe function tbl_graph() can be used to create a network from scratch with two data frames. It is basically equivalent to graph_from_data_frame().\nTo create random graphs with the usual generators, check out the create_*() and play_*() families of functions."
  },
  {
    "objectID": "material/tidynetAnaR/index.html#standard-verbs",
    "href": "material/tidynetAnaR/index.html#standard-verbs",
    "title": "Tidy Network Analysis in R",
    "section": "Standard verbs",
    "text": "Standard verbs\nThe tidy framework, specifically thinking about dplyr, is about providing verbs which help to solve common data manipulation tasks, such as mutate(), select(), filter(), and summarise(). The challange for the tbl_graph objects is that these verbs somehow need to work with two different data frames. The way tidygraph solves this is via a pointer to the data frame which is supposed to be manipulated. This pointer can be changed with the verb activate(). By default the nodes are activated, which can also be seen with the print function (see line 5 in the output of flo_tidy). To activate the edge data frame, simply use activate(\"edges\").\n\nflo_tidy %&gt;% activate(\"edges\")\n\n# A tbl_graph: 16 nodes and 20 edges\n#\n# An undirected simple graph with 2 components\n#\n# Edge Data: 20 × 2 (active)\n   from    to\n  &lt;int&gt; &lt;int&gt;\n1     1     9\n2     2     6\n3     2     7\n4     2     9\n5     3     5\n6     3     9\n# … with 14 more rows\n#\n# Node Data: 16 × 4\n  name       wealth `#priors` `#ties`\n  &lt;chr&gt;       &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 Acciaiuoli     10        53       2\n2 Albizzi        36        65       3\n3 Barbadori      55         0      14\n# … with 13 more rows\n\n\nAny data manipulation would now be done on the edge data frame.\nHaving “activated” a data frame, many of the known dplyr verbs can be used to manipulate the data frame. The activation process might indicate that edges and nodes can only be manipulated separately, which is certainly not desirable. It is, however, possible to gain access to the edge data frame when nodes are activated via the .E(). Similarly, nodes can be accessed via .N() when edges are activated. In the below example, we activate the edges and create a new edge attribute which indicates if a family is connected to the Medici or not.\n\nflo_tidy &lt;- flo_tidy %&gt;% \n  activate(\"edges\") %&gt;% \n  mutate(to_medici=(.N()$name[from]==\"Medici\" | .N()$name[to]==\"Medici\"))\n\nThis particular use case is helpful for visualizations.\n\nggraph(flo_tidy,\"stress\") + \n  geom_edge_link0(aes(edge_color = to_medici))+\n  geom_node_point(shape = 21, size = 10, fill = \"grey66\")+\n  geom_node_text(aes(label = name))+\n  theme_graph()\n\n\n\n\n\n\n\n\nThe dplyr verb filter() can be used to obtain a subgraph that satisfies given conditions on the nodes. Note that in the case that you filter on nodes, also edges will be effected. If a node does not satisfy the condition, then all edges connected to that node disappear. This is not the case for edges though.\n\nflo_tidy %&gt;% \n  activate(\"edges\") %&gt;% \n  filter(to_medici) %&gt;% \nggraph(\"stress\",bbox=10) + \n  geom_edge_link0(edge_color = \"black\")+\n  geom_node_point(shape = 21, size = 10, fill = \"grey66\")+\n  geom_node_text(aes(label = name))+\n  theme_graph()"
  },
  {
    "objectID": "material/tidynetAnaR/index.html#joins",
    "href": "material/tidynetAnaR/index.html#joins",
    "title": "Tidy Network Analysis in R",
    "section": "Joins",
    "text": "Joins"
  },
  {
    "objectID": "material/tidynetAnaR/index.html#new-verbs",
    "href": "material/tidynetAnaR/index.html#new-verbs",
    "title": "Tidy Network Analysis in R",
    "section": "New Verbs",
    "text": "New Verbs"
  },
  {
    "objectID": "material/netAnaR/index.html",
    "href": "material/netAnaR/index.html",
    "title": "Basic Network Analysis in R",
    "section": "",
    "text": "(last update 2022-09-26)"
  },
  {
    "objectID": "material/netAnaR/index.html#use-case-triad-census",
    "href": "material/netAnaR/index.html#use-case-triad-census",
    "title": "Basic Network Analysis in R",
    "section": "Use case: triad census",
    "text": "Use case: triad census\n\n\nExpand\n\nIn this short use case example, we will discuss the triad census of a directed network. In a directed network, there are 16 possible configurations of edges that can occur between three nodes.\n\nThe triad census of a network gives the number of occurrences of each of these triad. Triads are labelled xyzL where x is the number of reciprocated ties, y is the number of unreciprocated ties and z is the number of null ties. The L term is a letter (U,C,D or T) which allows to differentiate between triads where these numbers are the same.\nOne of the many applications of the triad census is to compare a set of networks. In this example, we are tackling the question of “how transitive is football?” and asses structural differences among a set of football leagues.\n\ndata(\"football_triad\")\n\nfootball_triad is a list which contains networks of 112 football leagues as igraph objects. A directed link between team A and B indicates that A won a match against B. Note that there can also be an edge from B to A, since most leagues play a double round robin. For the sake of simplicity, all draws were deleted so that there could also be null ties between two teams if both games ended in a draw.\nBelow, we calculate the triad census for all network at once using lapply(). The function returns the triad census for each network as a list, which we turn into a matrix in the second step. Afterwards, we manually add the row and column names of the matrix.\n\nfooty_census &lt;- lapply(football_triad,triad_census) \nfooty_census &lt;- matrix(unlist(footy_census),ncol=16,byrow = T)\nrownames(footy_census) &lt;- sapply(football_triad,function(x) x$name)\ncolnames(footy_census) &lt;- c(\"003\",\"012\",\"102\",\"021D\",\"021U\",\"021C\",\"111D\",\"111U\",\n                         \"030T\",\"030C\",\"201\",\"120D\",\"120U\",\"120C\",\"210\",\"300\")\n\n#normalize to make proportions comparable across leagues\nfooty_census_norm &lt;- footy_census/rowSums(footy_census)\n\n#check the Top 5 leagues\nidx &lt;- which(rownames(footy_census)%in%c(\"england\",\"spain\",\"germany\",\n                                      \"italy\",\"france\"))\nfooty_census[idx,]\n\n        003 012 102 021D 021U 021C 111D 111U 030T 030C 201 120D 120U 120C 210\nengland   2  10   0   58   31   40   34   44  338   29  19  118  129  143 131\nfrance    1  23   5   30   33   44   48   40  332   41  16  132  108  160 114\ngermany   0  21   6   27   19   49   38   46  165   16  23   77   79  117 120\nitaly     1   4   2   35   43   30   30   22  419   38   5  164  116  118  99\nspain     0   8   4   27   42   45   32   35  364   43  11  126  105  148 130\n        300\nengland  14\nfrance   13\ngermany  13\nitaly    14\nspain    20\n\n\nNotice how the transitive triad (030T) has the largest count in the top leagues, hinting toward the childhood wisdom: “If A wins against B and B wins against C, then A must win against C”.\nIn empirical studies, we are not necessarily only interested in transitive triads, but rather how the triad census profiles compare across networks. We follow Kathrine Faust’s suggestion and do a singular value decomposition (SVD) on the normalized triad census matrix.\n\nfooty_svd &lt;- svd(footy_census_norm)\n\nSVDs are used to reduce the dimensionality of the data, but retaining most of the information. In our case, the data is 16 dimensional, which is impossible to visualize to compare the networks. With an SVD, we can reduce it to two dimensions and get a better visual overview.\n\n\n\n\n\n\n\n\n\nHow to interpret the dimensions? To investigate this question, we take a closer look at the first two dimensions and compare it to some network descriptives. For the sake of brevity, we here only look at the density and proportion of 030T triads. In general, any node/dyad/triad level statistic could be used.\n\n\n\n\n\n\n\n\n\nDensity doesn’t really seem to be related to the first dimension in this case (in many cases it is!). Might be worthwhile to explore this further\n\n\n\n\n\n\n\n\n\nFor the second dimension, we get a clearer association. It seems that the fraction of transitive triads is a good indicator for structural differences among leagues.\nMore details can be found in the paper by Kathrine Faust."
  },
  {
    "objectID": "material/netAnaR/index.html#use-case-florentine-families",
    "href": "material/netAnaR/index.html#use-case-florentine-families",
    "title": "Basic Network Analysis in R",
    "section": "Use case: Florentine Families",
    "text": "Use case: Florentine Families\n\n\nExpand\n\nA classic example application of centrality indices is the “Florentine Families” dataset, which is included in the networkdata package.\n\ndata(\"flo_marriage\")\n\n\n\n\n\n\n\n\n\n\nTh network shows marriage ties among Renaissance Families in Florence. Marriages at that time were strategic to improve the standing of families in society. The size of the names is proportional to the wealth of the families. Although the Strozzi were the wealthiest family, it was ultimately the Medici who became the most powerful family. This is in part due to their central position within this marriage network.\nThe table bellow shows the ranking for the four most commonly used centrality indices (1=top rank).\n\n\n\n\n\nname\ndegree\nbetweenness\ncloseness\neigen\n\n\n\n\nAcciaiuoli\n13.5\n14\n11.5\n12\n\n\nAlbizzi\n6.5\n3\n3.5\n9\n\n\nBarbadori\n10.5\n8\n6.5\n10\n\n\nBischeri\n6.5\n6\n8.0\n6\n\n\nCastellani\n6.5\n10\n9.5\n8\n\n\nGinori\n13.5\n14\n13.0\n14\n\n\nGuadagni\n2.5\n2\n5.0\n5\n\n\nLamberteschi\n13.5\n14\n14.0\n13\n\n\nMedici\n1.0\n1\n1.0\n1\n\n\nPazzi\n13.5\n14\n15.0\n15\n\n\nPeruzzi\n6.5\n11\n11.5\n7\n\n\nPucci\n16.0\n14\n16.0\n16\n\n\nRidolfi\n6.5\n5\n2.0\n3\n\n\nSalviati\n10.5\n4\n9.5\n11\n\n\nStrozzi\n2.5\n7\n6.5\n2\n\n\nTornabuoni\n6.5\n9\n3.5\n4\n\n\n\n\n\nNo matter what structural feature we consider to be important, the Medici always have the most advantageous position."
  },
  {
    "objectID": "material/netAnaR/index.html#additional-material",
    "href": "material/netAnaR/index.html#additional-material",
    "title": "Basic Network Analysis in R",
    "section": "Additional Material",
    "text": "Additional Material\nI have written a series of blog post about the concept of network centrality, which introduces some novel tools to assess centrality. These also discuss empirical applications of indices in greater detail. (1, 2, 3)\nThe blog posts rely on the netrankr package (link), which also comes with 9 vignettes that explain the functionality in great detail. Note that the package also implements around 30 indices, but the index based approach is not its main purpose."
  },
  {
    "objectID": "material/netAnaR/index.html#two-mode-networks",
    "href": "material/netAnaR/index.html#two-mode-networks",
    "title": "Basic Network Analysis in R",
    "section": "… two mode networks",
    "text": "… two mode networks\n\n\nExpand\n\nA two mode network is a network that consists of two disjoint sets of nodes (like people and events). Ties connect the two sets, e. g. participation of people in events. There exists a great variety of two mode networks. The most often encountered ones are\n\nAffiliation networks (Membership in institutions)\nVoting/Sponsorship networks (politicians and bills)\nCitation network (authors and papers)\nCo-Authorship networks (authors and papers)\n\nBelow we will discuss some methods via the famous “southern women” dataset consisting of 18 women who attended a series of 14 events.\n\ndata(\"southern_women\")\n\n\n\n\n\n\n\n\n\n\nThe adjacency matrix of a two mode network is also referred to as an incidence matrix and can be obtained via as_incidence_matrix()\n\nA &lt;- as_incidence_matrix(southern_women)\nA\n\n          6/27 3/2 4/12 9/26 2/25 5/19 3/15 9/16 4/8 6/10 2/23 4/7 11/21 8/3\nEVELYN       1   1    1    1    1    1    0    1   1    0    0   0     0   0\nLAURA        1   1    1    0    1    1    1    1   0    0    0   0     0   0\nTHERESA      0   1    1    1    1    1    1    1   1    0    0   0     0   0\nBRENDA       1   0    1    1    1    1    1    1   0    0    0   0     0   0\nCHARLOTTE    0   0    1    1    1    0    1    0   0    0    0   0     0   0\nFRANCES      0   0    1    0    1    1    0    1   0    0    0   0     0   0\nELEANOR      0   0    0    0    1    1    1    1   0    0    0   0     0   0\nPEARL        0   0    0    0    0    1    0    1   1    0    0   0     0   0\nRUTH         0   0    0    0    1    0    1    1   1    0    0   0     0   0\nVERNE        0   0    0    0    0    0    1    1   1    0    0   1     0   0\nMYRNA        0   0    0    0    0    0    0    1   1    1    0   1     0   0\nKATHERINE    0   0    0    0    0    0    0    1   1    1    0   1     1   1\nSYLVIA       0   0    0    0    0    0    1    1   1    1    0   1     1   1\nNORA         0   0    0    0    0    1    1    0   1    1    1   1     1   1\nHELEN        0   0    0    0    0    0    1    1   0    1    1   1     0   0\nDOROTHY      0   0    0    0    0    0    0    1   1    0    0   0     0   0\nOLIVIA       0   0    0    0    0    0    0    0   1    0    1   0     0   0\nFLORA        0   0    0    0    0    0    0    0   1    0    1   0     0   0\n\n\nThe tnet (link) and bipartite (link) offer some methods to analyse two mode networks directly, by adapting tools for standard (one-mode) networks (like the ones described above).\nBesides analyzing a two-mode network as-is, there is also the possibility to project it to one mode. Mathematically, this is done by calculating \\(AA^T\\) or \\(A^TA\\), depending which mode we project on. As an example, consider the southern women dataset again.\n\nB &lt;- A%*%t(A)\nB\n\n          EVELYN LAURA THERESA BRENDA CHARLOTTE FRANCES ELEANOR PEARL RUTH\nEVELYN         8     6       7      6         3       4       3     3    3\nLAURA          6     7       6      6         3       4       4     2    3\nTHERESA        7     6       8      6         4       4       4     3    4\nBRENDA         6     6       6      7         4       4       4     2    3\nCHARLOTTE      3     3       4      4         4       2       2     0    2\nFRANCES        4     4       4      4         2       4       3     2    2\nELEANOR        3     4       4      4         2       3       4     2    3\nPEARL          3     2       3      2         0       2       2     3    2\nRUTH           3     3       4      3         2       2       3     2    4\nVERNE          2     2       3      2         1       1       2     2    3\nMYRNA          2     1       2      1         0       1       1     2    2\nKATHERINE      2     1       2      1         0       1       1     2    2\nSYLVIA         2     2       3      2         1       1       2     2    3\nNORA           2     2       3      2         1       1       2     2    2\nHELEN          1     2       2      2         1       1       2     1    2\nDOROTHY        2     1       2      1         0       1       1     2    2\nOLIVIA         1     0       1      0         0       0       0     1    1\nFLORA          1     0       1      0         0       0       0     1    1\n          VERNE MYRNA KATHERINE SYLVIA NORA HELEN DOROTHY OLIVIA FLORA\nEVELYN        2     2         2      2    2     1       2      1     1\nLAURA         2     1         1      2    2     2       1      0     0\nTHERESA       3     2         2      3    3     2       2      1     1\nBRENDA        2     1         1      2    2     2       1      0     0\nCHARLOTTE     1     0         0      1    1     1       0      0     0\nFRANCES       1     1         1      1    1     1       1      0     0\nELEANOR       2     1         1      2    2     2       1      0     0\nPEARL         2     2         2      2    2     1       2      1     1\nRUTH          3     2         2      3    2     2       2      1     1\nVERNE         4     3         3      4    3     3       2      1     1\nMYRNA         3     4         4      4    3     3       2      1     1\nKATHERINE     3     4         6      6    5     3       2      1     1\nSYLVIA        4     4         6      7    6     4       2      1     1\nNORA          3     3         5      6    8     4       1      2     2\nHELEN         3     3         3      4    4     5       1      1     1\nDOROTHY       2     2         2      2    1     1       2      1     1\nOLIVIA        1     1         1      1    2     1       1      2     2\nFLORA         1     1         1      1    2     1       1      2     2\n\n\nThis matrix can now be interpreted as a weighted network among the 18 women. Each entry corresponds to the number of times two women went to the same event.\n\n\n\n\n\n\n\n\n\nAs you can see, the network has become very dense. A very common step is now to binarize the network. In doing so, we basically turn the network into a simple undirected one-mode network. This makes all methods we described in the first few sections applicable to the network (at least in theory). The simplest way of binarizing a weighted projection is to define a global threshold and remove a tie if its weight is below the global threshold. This is simple but come with many undesirable structural problems. More sophisticated tools work with statistical models in the background which determine if an edge weight differs enough from the expected value. If so, the edge is kept in the binary “backbone” of the network.\nAll possible backbone extraction methods are implemented in the backbone package (link). An introduction to the package can be found on arxiv."
  },
  {
    "objectID": "material/netAnaR/index.html#signed-networks",
    "href": "material/netAnaR/index.html#signed-networks",
    "title": "Basic Network Analysis in R",
    "section": "… signed networks",
    "text": "… signed networks\n\n\nExpand\n\nTraditional SNA usually deals with relations among entities (e.g. people) that are positive, including “friendship”, “advice seeking”, etc. Most network analytic tools are devised under this premise, be that centrality indices, clustering tools and so forth. But of course not all occurring relations are positive. People can be friends but also foes.\nThis gives rise to signed networks. These networks are usually composed of both, positive and negative, ties measured among a set of entities. Traditional network analytic tools are not applicable to such networks without adapting for the presents of negative ties. The signnet package (link) brings together methods that have been developed to analyse signed networks. This includes\n\nStructural balance (tutorial)\nBlockmodeling (tutorial)\nCentrality (tutorial)\nSigned two-mode networks (tutorial)\n\nA dedicated tutorial for each methodology is given in the package vignettes, also linked above. Below, we just briefly discuss the structure of the package.\nThe foundation of signnet is provided by igraph. All functions in the package assume that an igraph object is a signed network if it has an edge attribute “sign” with values 1 (positive) or -1 (negative).\n\nlibrary(signnet)\ng &lt;- graph.full(5,directed = FALSE,loops = FALSE)\nE(g)$sign &lt;- 1\ng\n\nIGRAPH d5a26e9 U--- 5 10 -- Full graph\n+ attr: name (g/c), loops (g/l), sign (e/n)\n+ edges from d5a26e9:\n [1] 1--2 1--3 1--4 1--5 2--3 2--4 2--5 3--4 3--5 4--5\n\n\nAll methods should throw an error if the sign attribute is missing or contains other values than -1 and 1.\nMatrices associated with a signed network follow the igraph naming scheme. The signed adjacency matrix can be obtained with as_adj_signed().\n\ndata(\"tribes\")\nas_adj_signed(tribes)[1:5,1:5]\n\n      Gavev Kotun Ove Alika Nagam\nGavev     0     1  -1    -1    -1\nKotun     1     0  -1     0    -1\nOve      -1    -1   0     1     0\nAlika    -1     0   1     0     0\nNagam    -1    -1   0     0     0\n\n\nThe signed Laplacian matrix is obtained by laplacian_matrix_signed().\n\nlaplacian_matrix_signed(tribes)[1:5,1:5]\n\n      Gavev Kotun Ove Alika Nagam\nGavev     8    -1   1     1     1\nKotun    -1     8   1     0     1\nOve       1     1   6    -1     0\nAlika     1     0  -1     3     0\nNagam     1     1   0     0     7\n\n\nA function not explicitly mentioned in the tutorials linked above is triad_census_signed() which calculates the signed triad census of a directed signed network. While the unsigned triad census has only 16 possible outcomes, there are 138 non-isomorphic signed triads, shown below.  The naming scheme is “xxx-yyyyyy” where “xxx” corresponds to the name of the respective unsigned triad and “yyyyyy” is a string of “0”, “N”, “P”, describing the type of ties present. So “300-NNNNNN” is a triad with all ties present and all ties are negative.\nThe package includes two well known datasets to play with.\nThe “tribes” dataset is a signed social network of tribes of the Gahuku–Gama alliance structure of the Eastern Central Highlands of New Guinea. The network contains sixteen tribes connected by friendship (“rova”) and enmity (“hina”).\nThe “cowList” dataset contains a list of 52 signed networks of inter-state relations over time (1946-1999). Two countries are connected by a positive tie if they form an alliance or have a peace treaty. A negative tie exists between countries who are at war or in other kinds of conflicts. The dataset is derrived from the correlates of war."
  },
  {
    "objectID": "material/netAnaR/index.html#ego-networks",
    "href": "material/netAnaR/index.html#ego-networks",
    "title": "Basic Network Analysis in R",
    "section": "… ego networks",
    "text": "… ego networks\n\n\nExpand\n\nIf you want to analyze ego networks, then I can only recommend this book by Raffaele Vacca. Raffaele has given countless workshops on ego network analysis in R and his material should provide you with everything you need."
  },
  {
    "objectID": "material/netAnaR/index.html#multilevel-networks",
    "href": "material/netAnaR/index.html#multilevel-networks",
    "title": "Basic Network Analysis in R",
    "section": "… multilevel networks",
    "text": "… multilevel networks\n\n\nExpand\n\nFor analyzing multilevel networks, I recommend the multinet pakage (link). Check out this JSS Paper for a brief introduction into the package.\nIf you just want to visualize a multilevel network, then head over to my network visualization tutorial."
  },
  {
    "objectID": "material/netAnaR/index.html#multigraphs",
    "href": "material/netAnaR/index.html#multigraphs",
    "title": "Basic Network Analysis in R",
    "section": "… multigraphs",
    "text": "… multigraphs\n\n\nExpand\n\nMultigraphs are network representations in which multiple edges and edge loops (self edges) are permitted. In R, there are at least two relevant packages. The first is multigraph (link) which implements some visualization methods for multigraphs.\nThe second is multigraphr (link) which comes with a series of statistical methods to study local and global properties of such graphs and goodness of fit tests. The vignette of the package is a brilliant starting point for using the package.\nFor the technical details behind multigraphr, you can refer to:\n\nShafie, T. (2015). A multigraph approach to social network analysis. Journal of Social Structure, 16. (link)\n\n\nShafie, T. (2016). Analyzing local and global properties of multigraphs. The Journal of Mathematical Sociology, 40(4), 239-264. (link)\n\n\nShafie, T. and Schoch, D., (2021). Multiplexity analysis of networks using multigraph representations. Statistical Methods & Applications 30 (5), 1425-1444 (link)\n\n\nShafie, T. (Under review). Goodness of fit tests for random multigraph models."
  },
  {
    "objectID": "material/netAnaR/index.html#something-else",
    "href": "material/netAnaR/index.html#something-else",
    "title": "Basic Network Analysis in R",
    "section": "… something else",
    "text": "… something else\n\n\nExpand\n\nCant find what you are looking for? Ping me on twitter and I see what I can do."
  }
]